package testdata

import (
	"math/big"

	"github.com/ellcrys/elld/util"
	"github.com/ellcrys/elld/wire"
)

var GenesisBlock = &wire.Block{
	Header: &wire.Header{
		Number: 0x0000000000000001,
		Nonce: wire.BlockNonce{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
		},
		MixHash: util.Hash{
			0x6d, 0x69, 0x78, 0x20, 0x68, 0x61, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		Timestamp:     1533380605,
		CreatorPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
		ParentHash: util.Hash{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		StateRoot: util.Hash{
			0x42, 0x28, 0x55, 0x51, 0x02, 0xa3, 0xe0, 0x42, 0x90, 0x9a, 0xbd, 0x88, 0x58, 0xaf, 0xf3, 0x7d,
			0xb9, 0xeb, 0x13, 0xab, 0x40, 0xed, 0x9b, 0x67, 0xab, 0x30, 0x35, 0x34, 0x3c, 0x7c, 0x79, 0x50,
		},
		TransactionsRoot: util.Hash{
			0x94, 0xe4, 0x6d, 0x40, 0x83, 0xdf, 0x0a, 0x27, 0x66, 0x2a, 0xc0, 0x8f, 0x32, 0x9c, 0xc0, 0x46,
			0x3b, 0x8a, 0x65, 0x42, 0x89, 0xf2, 0xf3, 0xda, 0x12, 0xcd, 0x34, 0x0f, 0x5a, 0x88, 0x17, 0x26,
		},
		Difficulty: new(big.Int).SetInt64(0x1f4),
	},
	Transactions: []*wire.Transaction{
		&wire.Transaction{
			Type:         1,
			Nonce:        123,
			To:           "e6i7rxApBYUt7w94gGDKTz45A5J567JfkS",
			From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
			SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			Value:        "1",
			Timestamp:    1532730722,
			Fee:          "0.1",
			InvokeArgs:   (*wire.InvokeArgs)(nil),
			Sig: []uint8{
				0x88, 0x0f, 0x9d, 0xe7, 0x01, 0x42, 0x13, 0xca, 0x41, 0x9b, 0x01, 0x53, 0xf3, 0x5a, 0x68, 0x24,
				0x6e, 0xc5, 0x39, 0x64, 0x39, 0x1b, 0xa6, 0x55, 0x2f, 0xb8, 0x17, 0xc7, 0xd9, 0x03, 0x52, 0x1a,
				0x8d, 0xdb, 0xc6, 0xf0, 0xcc, 0x0c, 0xb9, 0x3b, 0x6c, 0x20, 0x31, 0x92, 0xe1, 0xc8, 0xc5, 0xb5,
				0xa8, 0xf8, 0x38, 0xc6, 0xf7, 0xb3, 0xeb, 0x04, 0x42, 0xf8, 0xbf, 0x0e, 0x81, 0xfe, 0x8e, 0x07,
			},
			Hash: util.Hash{
				0x00, 0x7e, 0x3c, 0x2b, 0xea, 0x97, 0x23, 0x45, 0x0d, 0xa8, 0x8c, 0x4f, 0xa1, 0xaa, 0xc5, 0x0c,
				0xb0, 0x27, 0x2f, 0xdc, 0xde, 0x41, 0x9f, 0x69, 0x44, 0x81, 0x98, 0x3f, 0x12, 0x14, 0x13, 0xf4,
			},
		},
	},
	Hash: util.Hash{
		0x49, 0x3e, 0x03, 0x6d, 0xa7, 0xe3, 0x14, 0x88, 0xc7, 0xa2, 0xf7, 0xb9, 0xa1, 0xae, 0x9a, 0xaf,
		0x0b, 0xe5, 0xb8, 0x3f, 0xc9, 0x68, 0x50, 0x25, 0xf6, 0x1f, 0xff, 0xb0, 0x2c, 0x0d, 0x82, 0x45,
	},
	Sig: []uint8{
		0xde, 0xe1, 0x03, 0x9c, 0xb8, 0x4e, 0xbb, 0xc4, 0x33, 0x9d, 0x69, 0x92, 0x04, 0x3e, 0x63, 0x87,
		0x70, 0x57, 0xc1, 0x8e, 0xd4, 0x66, 0x26, 0x81, 0x2c, 0x6a, 0xdf, 0xe8, 0xf9, 0x46, 0xef, 0xa1,
		0x89, 0x40, 0xa8, 0xe5, 0x64, 0xc4, 0x93, 0x63, 0x33, 0xbe, 0x0d, 0x84, 0x4d, 0x77, 0x1c, 0x96,
		0xee, 0x41, 0xfc, 0xbf, 0x8b, 0xd3, 0xaf, 0x72, 0xd1, 0xdc, 0xda, 0x73, 0x01, 0x28, 0x4e, 0x05,
	},
}

var Block2 = &wire.Block{
	Header: &wire.Header{
		Number: 0x0000000000000002,
		Nonce: wire.BlockNonce{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
		},
		MixHash: util.Hash{
			0x6d, 0x69, 0x78, 0x20, 0x68, 0x61, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		Timestamp:     1533382913,
		CreatorPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
		ParentHash: util.Hash{
			0x49, 0x3e, 0x03, 0x6d, 0xa7, 0xe3, 0x14, 0x88, 0xc7, 0xa2, 0xf7, 0xb9, 0xa1, 0xae, 0x9a, 0xaf,
			0x0b, 0xe5, 0xb8, 0x3f, 0xc9, 0x68, 0x50, 0x25, 0xf6, 0x1f, 0xff, 0xb0, 0x2c, 0x0d, 0x82, 0x45,
		},
		StateRoot: util.Hash{
			0x9a, 0x79, 0xb3, 0x64, 0xa3, 0x3b, 0xeb, 0x1d, 0x5b, 0x5f, 0xcd, 0x2c, 0x86, 0xfa, 0x5a, 0x10,
			0xc3, 0x15, 0xaf, 0x83, 0x43, 0x9b, 0xe8, 0x2a, 0x39, 0x03, 0x7f, 0xd9, 0x6a, 0x1c, 0x18, 0x49,
		},
		TransactionsRoot: util.Hash{
			0x94, 0xe4, 0x6d, 0x40, 0x83, 0xdf, 0x0a, 0x27, 0x66, 0x2a, 0xc0, 0x8f, 0x32, 0x9c, 0xc0, 0x46,
			0x3b, 0x8a, 0x65, 0x42, 0x89, 0xf2, 0xf3, 0xda, 0x12, 0xcd, 0x34, 0x0f, 0x5a, 0x88, 0x17, 0x26,
		},
		Difficulty: new(big.Int).SetInt64(0x1f4),
	},
	Transactions: []*wire.Transaction{
		&wire.Transaction{
			Type:         1,
			Nonce:        123,
			To:           "e6i7rxApBYUt7w94gGDKTz45A5J567JfkS",
			From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
			SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			Value:        "1",
			Timestamp:    1532730722,
			Fee:          "0.1",
			InvokeArgs:   (*wire.InvokeArgs)(nil),
			Sig: []uint8{
				0x88, 0x0f, 0x9d, 0xe7, 0x01, 0x42, 0x13, 0xca, 0x41, 0x9b, 0x01, 0x53, 0xf3, 0x5a, 0x68, 0x24,
				0x6e, 0xc5, 0x39, 0x64, 0x39, 0x1b, 0xa6, 0x55, 0x2f, 0xb8, 0x17, 0xc7, 0xd9, 0x03, 0x52, 0x1a,
				0x8d, 0xdb, 0xc6, 0xf0, 0xcc, 0x0c, 0xb9, 0x3b, 0x6c, 0x20, 0x31, 0x92, 0xe1, 0xc8, 0xc5, 0xb5,
				0xa8, 0xf8, 0x38, 0xc6, 0xf7, 0xb3, 0xeb, 0x04, 0x42, 0xf8, 0xbf, 0x0e, 0x81, 0xfe, 0x8e, 0x07,
			},
			Hash: util.Hash{
				0x00, 0x7e, 0x3c, 0x2b, 0xea, 0x97, 0x23, 0x45, 0x0d, 0xa8, 0x8c, 0x4f, 0xa1, 0xaa, 0xc5, 0x0c,
				0xb0, 0x27, 0x2f, 0xdc, 0xde, 0x41, 0x9f, 0x69, 0x44, 0x81, 0x98, 0x3f, 0x12, 0x14, 0x13, 0xf4,
			},
		},
	},
	Hash: util.Hash{
		0x6f, 0xa9, 0x13, 0x2a, 0xae, 0x1c, 0xf9, 0x23, 0xba, 0x2a, 0x89, 0x4a, 0x2d, 0x5b, 0x3f, 0xec,
		0xea, 0x1a, 0xb6, 0xfd, 0x64, 0x6b, 0xf7, 0xc2, 0x30, 0x53, 0xb9, 0x61, 0x69, 0xe2, 0x80, 0x85,
	},
	Sig: []uint8{
		0x09, 0x1a, 0x6c, 0xb1, 0xdd, 0xaa, 0x05, 0x43, 0xc3, 0xf9, 0xd0, 0xf5, 0xd7, 0x1d, 0x77, 0x2d,
		0xf2, 0xf9, 0xb4, 0x7e, 0x1a, 0xc4, 0x03, 0x3e, 0x73, 0x5b, 0xa9, 0x35, 0xc3, 0x76, 0x98, 0xed,
		0x7d, 0x20, 0x3a, 0x97, 0x0f, 0x57, 0x4d, 0xf1, 0x14, 0xfe, 0x3c, 0x44, 0x5c, 0x93, 0xfd, 0xc0,
		0x82, 0xa0, 0x64, 0xca, 0x36, 0x28, 0x16, 0xe7, 0xc0, 0x39, 0x3f, 0x0d, 0xc9, 0x9d, 0x87, 0x08,
	},
}

var BlockSet1 = []*wire.Block{
	&wire.Block{
		Header: &wire.Header{
			Number: 0x0000000000000002,
			Nonce: wire.BlockNonce{
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
			MixHash: util.Hash{
				0x6d, 0x69, 0x78, 0x20, 0x68, 0x61, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
			Timestamp:     1533383903,
			CreatorPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			ParentHash: util.Hash{
				0x49, 0x3e, 0x03, 0x6d, 0xa7, 0xe3, 0x14, 0x88, 0xc7, 0xa2, 0xf7, 0xb9, 0xa1, 0xae, 0x9a, 0xaf,
				0x0b, 0xe5, 0xb8, 0x3f, 0xc9, 0x68, 0x50, 0x25, 0xf6, 0x1f, 0xff, 0xb0, 0x2c, 0x0d, 0x82, 0x45,
			},
			StateRoot: util.Hash{
				0x9a, 0x79, 0xb3, 0x64, 0xa3, 0x3b, 0xeb, 0x1d, 0x5b, 0x5f, 0xcd, 0x2c, 0x86, 0xfa, 0x5a, 0x10,
				0xc3, 0x15, 0xaf, 0x83, 0x43, 0x9b, 0xe8, 0x2a, 0x39, 0x03, 0x7f, 0xd9, 0x6a, 0x1c, 0x18, 0x49,
			},
			TransactionsRoot: util.Hash{
				0x94, 0xe4, 0x6d, 0x40, 0x83, 0xdf, 0x0a, 0x27, 0x66, 0x2a, 0xc0, 0x8f, 0x32, 0x9c, 0xc0, 0x46,
				0x3b, 0x8a, 0x65, 0x42, 0x89, 0xf2, 0xf3, 0xda, 0x12, 0xcd, 0x34, 0x0f, 0x5a, 0x88, 0x17, 0x26,
			},
			Difficulty: new(big.Int).SetInt64(0x1f4),
		},
		Transactions: []*wire.Transaction{
			&wire.Transaction{
				Type:         1,
				Nonce:        123,
				To:           "e6i7rxApBYUt7w94gGDKTz45A5J567JfkS",
				From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
				SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
				Value:        "1",
				Timestamp:    1532730722,
				Fee:          "0.1",
				InvokeArgs:   (*wire.InvokeArgs)(nil),
				Sig: []uint8{
					0x88, 0x0f, 0x9d, 0xe7, 0x01, 0x42, 0x13, 0xca, 0x41, 0x9b, 0x01, 0x53, 0xf3, 0x5a, 0x68, 0x24,
					0x6e, 0xc5, 0x39, 0x64, 0x39, 0x1b, 0xa6, 0x55, 0x2f, 0xb8, 0x17, 0xc7, 0xd9, 0x03, 0x52, 0x1a,
					0x8d, 0xdb, 0xc6, 0xf0, 0xcc, 0x0c, 0xb9, 0x3b, 0x6c, 0x20, 0x31, 0x92, 0xe1, 0xc8, 0xc5, 0xb5,
					0xa8, 0xf8, 0x38, 0xc6, 0xf7, 0xb3, 0xeb, 0x04, 0x42, 0xf8, 0xbf, 0x0e, 0x81, 0xfe, 0x8e, 0x07,
				},
				Hash: util.Hash{
					0x00, 0x7e, 0x3c, 0x2b, 0xea, 0x97, 0x23, 0x45, 0x0d, 0xa8, 0x8c, 0x4f, 0xa1, 0xaa, 0xc5, 0x0c,
					0xb0, 0x27, 0x2f, 0xdc, 0xde, 0x41, 0x9f, 0x69, 0x44, 0x81, 0x98, 0x3f, 0x12, 0x14, 0x13, 0xf4,
				},
			},
		},
		Hash: util.Hash{
			0xe3, 0xa3, 0x7b, 0xc9, 0x8b, 0x19, 0x0f, 0xd8, 0xd4, 0xbd, 0x21, 0xaf, 0xaf, 0xa0, 0x5d, 0xdf,
			0x93, 0x20, 0x65, 0xbf, 0x60, 0x55, 0x39, 0xe5, 0x8c, 0x92, 0x30, 0x0e, 0x16, 0x4e, 0xe7, 0x9b,
		},
		Sig: []uint8{
			0x35, 0xf7, 0x09, 0x4d, 0x02, 0x54, 0xf6, 0x1f, 0x61, 0xf4, 0x27, 0x1b, 0x77, 0x69, 0x95, 0x34,
			0x8c, 0x04, 0x9e, 0xda, 0xdf, 0xe7, 0x86, 0xc0, 0xf3, 0x8b, 0x3e, 0x43, 0x97, 0x8c, 0x37, 0xf6,
			0xbc, 0xaa, 0x39, 0x34, 0xa5, 0x0a, 0xc0, 0xe3, 0xc4, 0xa4, 0x19, 0x4d, 0x1b, 0x44, 0xa4, 0x62,
			0xad, 0xd1, 0x83, 0x3d, 0x75, 0x2e, 0x59, 0xa1, 0x6b, 0x72, 0xe2, 0x70, 0xb6, 0x83, 0x34, 0x02,
		},
	},
	&wire.Block{
		Header: &wire.Header{
			Number: 0x0000000000000003,
			Nonce: wire.BlockNonce{
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
			MixHash: util.Hash{
				0x6d, 0x69, 0x78, 0x20, 0x68, 0x61, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
			Timestamp:     1533388726,
			CreatorPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			ParentHash: util.Hash{
				0xe3, 0xa3, 0x7b, 0xc9, 0x8b, 0x19, 0x0f, 0xd8, 0xd4, 0xbd, 0x21, 0xaf, 0xaf, 0xa0, 0x5d, 0xdf,
				0x93, 0x20, 0x65, 0xbf, 0x60, 0x55, 0x39, 0xe5, 0x8c, 0x92, 0x30, 0x0e, 0x16, 0x4e, 0xe7, 0x9b,
			},
			StateRoot: util.Hash{
				0xd0, 0x22, 0x77, 0xed, 0x03, 0x85, 0x8a, 0xfb, 0xae, 0xb5, 0x7e, 0x5c, 0xee, 0x04, 0xc4, 0xaa,
				0xa7, 0xeb, 0xe2, 0x6d, 0x65, 0x63, 0x25, 0x79, 0xaa, 0x58, 0x68, 0x1c, 0xd6, 0x68, 0xdb, 0x2c,
			},
			TransactionsRoot: util.Hash{
				0x94, 0xe4, 0x6d, 0x40, 0x83, 0xdf, 0x0a, 0x27, 0x66, 0x2a, 0xc0, 0x8f, 0x32, 0x9c, 0xc0, 0x46,
				0x3b, 0x8a, 0x65, 0x42, 0x89, 0xf2, 0xf3, 0xda, 0x12, 0xcd, 0x34, 0x0f, 0x5a, 0x88, 0x17, 0x26,
			},
			Difficulty: new(big.Int).SetInt64(0x1f4),
		},
		Transactions: []*wire.Transaction{
			&wire.Transaction{
				Type:         1,
				Nonce:        123,
				To:           "e6i7rxApBYUt7w94gGDKTz45A5J567JfkS",
				From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
				SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
				Value:        "1",
				Timestamp:    1532730722,
				Fee:          "0.1",
				InvokeArgs:   (*wire.InvokeArgs)(nil),
				Sig: []uint8{
					0x88, 0x0f, 0x9d, 0xe7, 0x01, 0x42, 0x13, 0xca, 0x41, 0x9b, 0x01, 0x53, 0xf3, 0x5a, 0x68, 0x24,
					0x6e, 0xc5, 0x39, 0x64, 0x39, 0x1b, 0xa6, 0x55, 0x2f, 0xb8, 0x17, 0xc7, 0xd9, 0x03, 0x52, 0x1a,
					0x8d, 0xdb, 0xc6, 0xf0, 0xcc, 0x0c, 0xb9, 0x3b, 0x6c, 0x20, 0x31, 0x92, 0xe1, 0xc8, 0xc5, 0xb5,
					0xa8, 0xf8, 0x38, 0xc6, 0xf7, 0xb3, 0xeb, 0x04, 0x42, 0xf8, 0xbf, 0x0e, 0x81, 0xfe, 0x8e, 0x07,
				},
				Hash: util.Hash{
					0x00, 0x7e, 0x3c, 0x2b, 0xea, 0x97, 0x23, 0x45, 0x0d, 0xa8, 0x8c, 0x4f, 0xa1, 0xaa, 0xc5, 0x0c,
					0xb0, 0x27, 0x2f, 0xdc, 0xde, 0x41, 0x9f, 0x69, 0x44, 0x81, 0x98, 0x3f, 0x12, 0x14, 0x13, 0xf4,
				},
			},
		},
		Hash: util.Hash{
			0xad, 0xa4, 0x61, 0x03, 0x50, 0xe9, 0x62, 0x09, 0xe9, 0x0a, 0xba, 0xfe, 0x39, 0x4b, 0x5f, 0x25,
			0x99, 0x41, 0xb6, 0x01, 0x0e, 0xd4, 0xdb, 0xd6, 0x40, 0x23, 0x1e, 0x8a, 0x17, 0xcc, 0xad, 0xdb,
		},
		Sig: []uint8{
			0x0b, 0x0f, 0xf8, 0x80, 0x54, 0xaa, 0x8f, 0xc3, 0x7f, 0x47, 0x39, 0xe5, 0xe8, 0x86, 0xf4, 0xae,
			0x0c, 0xf9, 0xc6, 0x02, 0xac, 0x93, 0xae, 0xb9, 0x5f, 0x73, 0x92, 0xd6, 0x1b, 0xd1, 0xb9, 0xde,
			0x3c, 0xc2, 0x9d, 0x5d, 0xa5, 0x61, 0xf6, 0xd7, 0xda, 0xd8, 0xca, 0xe0, 0x6f, 0x44, 0x2d, 0x6b,
			0xc9, 0x35, 0xf3, 0x89, 0xd9, 0x6f, 0x49, 0x7b, 0x65, 0xd4, 0xc5, 0xa2, 0xa7, 0xe9, 0x69, 0x00,
		},
	},
	&wire.Block{
		Header: &wire.Header{
			Number: 0x0000000000000004,
			Nonce: wire.BlockNonce{
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
			MixHash: util.Hash{
				0x6d, 0x69, 0x78, 0x20, 0x68, 0x61, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
			Timestamp:     1533389251,
			CreatorPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			ParentHash: util.Hash{
				0xad, 0xa4, 0x61, 0x03, 0x50, 0xe9, 0x62, 0x09, 0xe9, 0x0a, 0xba, 0xfe, 0x39, 0x4b, 0x5f, 0x25,
				0x99, 0x41, 0xb6, 0x01, 0x0e, 0xd4, 0xdb, 0xd6, 0x40, 0x23, 0x1e, 0x8a, 0x17, 0xcc, 0xad, 0xdb,
			},
			StateRoot: util.Hash{
				0x75, 0x2e, 0x84, 0x80, 0xd3, 0x4b, 0x26, 0xa9, 0x0e, 0xc1, 0x8d, 0x50, 0xd2, 0x5d, 0x55, 0x49,
				0x92, 0x72, 0x93, 0xf0, 0x02, 0xab, 0xf2, 0xb0, 0x61, 0x5d, 0x9d, 0xb8, 0xd4, 0xb7, 0x72, 0xf2,
			},
			TransactionsRoot: util.Hash{
				0x94, 0xe4, 0x6d, 0x40, 0x83, 0xdf, 0x0a, 0x27, 0x66, 0x2a, 0xc0, 0x8f, 0x32, 0x9c, 0xc0, 0x46,
				0x3b, 0x8a, 0x65, 0x42, 0x89, 0xf2, 0xf3, 0xda, 0x12, 0xcd, 0x34, 0x0f, 0x5a, 0x88, 0x17, 0x26,
			},
			Difficulty: new(big.Int).SetInt64(0x1f4),
		},
		Transactions: []*wire.Transaction{
			&wire.Transaction{
				Type:         1,
				Nonce:        123,
				To:           "e6i7rxApBYUt7w94gGDKTz45A5J567JfkS",
				From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
				SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
				Value:        "1",
				Timestamp:    1532730722,
				Fee:          "0.1",
				InvokeArgs:   (*wire.InvokeArgs)(nil),
				Sig: []uint8{
					0x88, 0x0f, 0x9d, 0xe7, 0x01, 0x42, 0x13, 0xca, 0x41, 0x9b, 0x01, 0x53, 0xf3, 0x5a, 0x68, 0x24,
					0x6e, 0xc5, 0x39, 0x64, 0x39, 0x1b, 0xa6, 0x55, 0x2f, 0xb8, 0x17, 0xc7, 0xd9, 0x03, 0x52, 0x1a,
					0x8d, 0xdb, 0xc6, 0xf0, 0xcc, 0x0c, 0xb9, 0x3b, 0x6c, 0x20, 0x31, 0x92, 0xe1, 0xc8, 0xc5, 0xb5,
					0xa8, 0xf8, 0x38, 0xc6, 0xf7, 0xb3, 0xeb, 0x04, 0x42, 0xf8, 0xbf, 0x0e, 0x81, 0xfe, 0x8e, 0x07,
				},
				Hash: util.Hash{
					0x00, 0x7e, 0x3c, 0x2b, 0xea, 0x97, 0x23, 0x45, 0x0d, 0xa8, 0x8c, 0x4f, 0xa1, 0xaa, 0xc5, 0x0c,
					0xb0, 0x27, 0x2f, 0xdc, 0xde, 0x41, 0x9f, 0x69, 0x44, 0x81, 0x98, 0x3f, 0x12, 0x14, 0x13, 0xf4,
				},
			},
		},
		Hash: util.Hash{
			0xa5, 0xec, 0x5e, 0x7f, 0x66, 0x7c, 0xad, 0x8c, 0xbb, 0x58, 0xc7, 0x89, 0xee, 0xd3, 0xf7, 0x21,
			0x7d, 0x3a, 0x69, 0x4e, 0xf0, 0xd8, 0x6d, 0xf6, 0x29, 0x91, 0x74, 0xfa, 0xc7, 0xe3, 0xd1, 0xc0,
		},
		Sig: []uint8{
			0x6c, 0xec, 0x12, 0x9c, 0x74, 0x17, 0x1a, 0x5b, 0xac, 0x13, 0x47, 0x82, 0x04, 0x42, 0x33, 0x17,
			0x63, 0x04, 0x2d, 0x77, 0xe1, 0xe5, 0x5f, 0x89, 0x2c, 0xee, 0x9d, 0x5b, 0x6d, 0x81, 0x48, 0x4d,
			0x65, 0x66, 0xe1, 0xff, 0xbf, 0x38, 0x61, 0xad, 0x7c, 0x00, 0x84, 0xad, 0x84, 0x8e, 0xfe, 0x97,
			0x51, 0xe0, 0xe0, 0x41, 0x4e, 0x61, 0xe2, 0x36, 0xd3, 0xf6, 0x2c, 0x81, 0xf8, 0x2d, 0xd3, 0x0d,
		},
	},

	// invalid in the set: Stale number & parent hash is not pointing to block 2
	&wire.Block{
		Header: &wire.Header{
			Number: 0x0000000000000003,
			Nonce: wire.BlockNonce{
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
			MixHash: util.Hash{
				0x6d, 0x69, 0x78, 0x20, 0x68, 0x61, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
			Timestamp:     1533390679,
			CreatorPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			ParentHash: util.Hash{
				0x49, 0x3e, 0x03, 0x6d, 0xa7, 0xe3, 0x14, 0x88, 0xc7, 0xa2, 0xf7, 0xb9, 0xa1, 0xae, 0x9a, 0xaf,
				0x0b, 0xe5, 0xb8, 0x3f, 0xc9, 0x68, 0x50, 0x25, 0xf6, 0x1f, 0xff, 0xb0, 0x2c, 0x0d, 0x82, 0x45,
			},
			StateRoot: util.Hash{
				0xd0, 0x22, 0x77, 0xed, 0x03, 0x85, 0x8a, 0xfb, 0xae, 0xb5, 0x7e, 0x5c, 0xee, 0x04, 0xc4, 0xaa,
				0xa7, 0xeb, 0xe2, 0x6d, 0x65, 0x63, 0x25, 0x79, 0xaa, 0x58, 0x68, 0x1c, 0xd6, 0x68, 0xdb, 0x2c,
			},
			TransactionsRoot: util.Hash{
				0x94, 0xe4, 0x6d, 0x40, 0x83, 0xdf, 0x0a, 0x27, 0x66, 0x2a, 0xc0, 0x8f, 0x32, 0x9c, 0xc0, 0x46,
				0x3b, 0x8a, 0x65, 0x42, 0x89, 0xf2, 0xf3, 0xda, 0x12, 0xcd, 0x34, 0x0f, 0x5a, 0x88, 0x17, 0x26,
			},
			Difficulty: new(big.Int).SetInt64(0x1f4),
		},
		Transactions: []*wire.Transaction{
			&wire.Transaction{
				Type:         1,
				Nonce:        123,
				To:           "e6i7rxApBYUt7w94gGDKTz45A5J567JfkS",
				From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
				SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
				Value:        "1",
				Timestamp:    1532730722,
				Fee:          "0.1",
				InvokeArgs:   (*wire.InvokeArgs)(nil),
				Sig: []uint8{
					0x88, 0x0f, 0x9d, 0xe7, 0x01, 0x42, 0x13, 0xca, 0x41, 0x9b, 0x01, 0x53, 0xf3, 0x5a, 0x68, 0x24,
					0x6e, 0xc5, 0x39, 0x64, 0x39, 0x1b, 0xa6, 0x55, 0x2f, 0xb8, 0x17, 0xc7, 0xd9, 0x03, 0x52, 0x1a,
					0x8d, 0xdb, 0xc6, 0xf0, 0xcc, 0x0c, 0xb9, 0x3b, 0x6c, 0x20, 0x31, 0x92, 0xe1, 0xc8, 0xc5, 0xb5,
					0xa8, 0xf8, 0x38, 0xc6, 0xf7, 0xb3, 0xeb, 0x04, 0x42, 0xf8, 0xbf, 0x0e, 0x81, 0xfe, 0x8e, 0x07,
				},
				Hash: util.Hash{
					0x00, 0x7e, 0x3c, 0x2b, 0xea, 0x97, 0x23, 0x45, 0x0d, 0xa8, 0x8c, 0x4f, 0xa1, 0xaa, 0xc5, 0x0c,
					0xb0, 0x27, 0x2f, 0xdc, 0xde, 0x41, 0x9f, 0x69, 0x44, 0x81, 0x98, 0x3f, 0x12, 0x14, 0x13, 0xf4,
				},
			},
		},
		Hash: util.Hash{
			0xd8, 0xc2, 0xa1, 0x86, 0x62, 0x28, 0x73, 0x9f, 0xdd, 0xcc, 0x20, 0x8b, 0xfd, 0x63, 0xbb, 0xaa,
			0x63, 0x82, 0xf5, 0xaf, 0x75, 0x63, 0xa4, 0xeb, 0x6e, 0xae, 0x46, 0x28, 0x8d, 0x80, 0x52, 0x18,
		},
		Sig: []uint8{
			0x1e, 0x61, 0x49, 0xd3, 0x1d, 0x28, 0x7c, 0x75, 0x4b, 0x79, 0x28, 0x11, 0xcd, 0x51, 0x60, 0x5a,
			0xb9, 0xff, 0x37, 0x8a, 0x04, 0x75, 0x66, 0x6f, 0xef, 0x4b, 0xfc, 0x94, 0x6e, 0x92, 0x88, 0x83,
			0xc0, 0x0a, 0x1f, 0x7b, 0xe5, 0x9b, 0x6c, 0x9a, 0x06, 0x85, 0x37, 0x82, 0xfc, 0x36, 0x59, 0x6b,
			0x8d, 0xe2, 0x60, 0xb6, 0x6c, 0x9a, 0xf9, 0xb0, 0x7d, 0x05, 0xde, 0x96, 0x89, 0xbf, 0x10, 0x05,
		},
	},
}

var BlockWithSingleAllocTx = &wire.Block{
	Header: &wire.Header{
		Number: 0x0000000000000001,
		Nonce: wire.BlockNonce{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
		},
		MixHash: util.Hash{
			0x6d, 0x69, 0x78, 0x20, 0x68, 0x61, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		Timestamp:     1533392406,
		CreatorPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
		ParentHash: util.Hash{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		StateRoot: util.Hash{
			0xb7, 0xce, 0xe5, 0x0a, 0x9e, 0x67, 0xd0, 0x25, 0xb8, 0x0b, 0xaf, 0xd9, 0x9f, 0xeb, 0x56, 0x90,
			0x32, 0xc1, 0x86, 0xbb, 0x93, 0xf0, 0x9d, 0x8d, 0x66, 0x3d, 0xcb, 0x23, 0x38, 0x3c, 0x74, 0xee,
		},
		TransactionsRoot: util.Hash{
			0x8f, 0xb2, 0x99, 0x42, 0xd7, 0x52, 0xd4, 0x80, 0x05, 0x47, 0xa5, 0x6c, 0xa0, 0x56, 0x31, 0x54,
			0xc9, 0x0f, 0x73, 0xfa, 0x54, 0x10, 0xbf, 0xd0, 0xf9, 0x1b, 0xc4, 0x81, 0xc3, 0x5d, 0xc6, 0x29,
		},
		Difficulty: new(big.Int).SetInt64(0x1f4),
	},
	Transactions: []*wire.Transaction{
		&wire.Transaction{
			Type:         2,
			Nonce:        123,
			To:           "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
			From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
			SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			Value:        "1",
			Timestamp:    1532730722,
			Fee:          "0.1",
			InvokeArgs:   (*wire.InvokeArgs)(nil),
			Sig: []uint8{
				0x75, 0x41, 0xfe, 0x04, 0x0a, 0x9c, 0xad, 0xfa, 0x0f, 0xfe, 0x50, 0x19, 0x57, 0x34, 0x75, 0x90,
				0xe0, 0xba, 0x78, 0xd4, 0x36, 0x4c, 0xf6, 0xf7, 0x3a, 0x9f, 0x4f, 0x22, 0x14, 0xaf, 0x54, 0x4d,
				0x8d, 0x3e, 0x2f, 0x33, 0xba, 0x48, 0x57, 0x77, 0x47, 0xc3, 0x34, 0xab, 0xae, 0xec, 0x19, 0x80,
				0x3d, 0xcc, 0xa1, 0x0e, 0xf4, 0xd1, 0x3a, 0x15, 0xbe, 0x57, 0xab, 0x8b, 0x69, 0xd1, 0xe8, 0x08,
			},
			Hash: util.Hash{
				0xb5, 0xd3, 0x03, 0x9a, 0x1c, 0x65, 0x4c, 0xf8, 0x67, 0xf2, 0xa3, 0xd3, 0xa0, 0x05, 0x15, 0x52,
				0xd5, 0xff, 0x48, 0x30, 0xcc, 0x1c, 0x83, 0xa3, 0xad, 0xe0, 0x86, 0xe7, 0x25, 0xdd, 0xca, 0xdb,
			},
		},
	},
	Hash: util.Hash{
		0x73, 0x2b, 0x8f, 0xf9, 0x8b, 0x1a, 0x25, 0x4d, 0x35, 0x04, 0x12, 0xfe, 0xf2, 0x5f, 0xbf, 0x23,
		0x18, 0x9d, 0x81, 0x51, 0xa7, 0x5d, 0xb9, 0x4a, 0xa6, 0x99, 0x5c, 0x47, 0x6b, 0x11, 0xf3, 0x7a,
	},
	Sig: []uint8{
		0x53, 0x11, 0xe0, 0xbe, 0x6f, 0x88, 0xf8, 0x19, 0x80, 0x58, 0x1d, 0x78, 0xb0, 0x04, 0x65, 0x81,
		0x08, 0xd4, 0x77, 0x62, 0x35, 0x2f, 0x93, 0x9b, 0x09, 0x33, 0xc1, 0x5e, 0xe5, 0x86, 0x86, 0x09,
		0xaa, 0x01, 0xa9, 0xcc, 0x35, 0xc7, 0x59, 0xbb, 0xfb, 0x45, 0x8b, 0xc9, 0x31, 0x08, 0xbd, 0x7a,
		0x6f, 0x2e, 0xee, 0x66, 0xd7, 0x29, 0x93, 0xf0, 0x40, 0xa3, 0x58, 0x4c, 0x46, 0xcc, 0xb0, 0x06,
	},
}

var GenesisBlockWithAllocTxAndNumber2 = &wire.Block{
	Header: &wire.Header{
		Number: 0x0000000000000002,
		Nonce: wire.BlockNonce{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
		},
		MixHash: util.Hash{
			0x6d, 0x69, 0x78, 0x20, 0x68, 0x61, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		Timestamp:     1533387849,
		CreatorPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
		ParentHash: util.Hash{
			0x39, 0x7e, 0x54, 0xda, 0x64, 0x42, 0x7b, 0x23, 0xfb, 0x40, 0x4a, 0x3e, 0x79, 0x46, 0x29, 0x2a,
			0xea, 0x83, 0xc6, 0xad, 0x8b, 0xf2, 0x29, 0x88, 0x5d, 0xf6, 0x8b, 0xcc, 0x99, 0xb2, 0xbb, 0x06,
		},
		StateRoot: util.Hash{
			0xfe, 0x49, 0x93, 0xc9, 0xb3, 0xff, 0x32, 0x00, 0x90, 0xeb, 0x41, 0x26, 0x41, 0x98, 0x1e, 0x74,
			0xdb, 0x90, 0xed, 0xf4, 0x78, 0x6c, 0xb3, 0xfb, 0xbf, 0xfb, 0x5a, 0x22, 0x90, 0x10, 0x9c, 0xdf,
		},
		TransactionsRoot: util.Hash{
			0x8f, 0xb2, 0x99, 0x42, 0xd7, 0x52, 0xd4, 0x80, 0x05, 0x47, 0xa5, 0x6c, 0xa0, 0x56, 0x31, 0x54,
			0xc9, 0x0f, 0x73, 0xfa, 0x54, 0x10, 0xbf, 0xd0, 0xf9, 0x1b, 0xc4, 0x81, 0xc3, 0x5d, 0xc6, 0x29,
		},
		Difficulty: new(big.Int).SetInt64(0x1f4),
	},
	Transactions: []*wire.Transaction{
		&wire.Transaction{
			Type:         2,
			Nonce:        123,
			To:           "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
			From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
			SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			Value:        "1",
			Timestamp:    1532730722,
			Fee:          "0.1",
			InvokeArgs:   (*wire.InvokeArgs)(nil),
			Sig: []uint8{
				0x75, 0x41, 0xfe, 0x04, 0x0a, 0x9c, 0xad, 0xfa, 0x0f, 0xfe, 0x50, 0x19, 0x57, 0x34, 0x75, 0x90,
				0xe0, 0xba, 0x78, 0xd4, 0x36, 0x4c, 0xf6, 0xf7, 0x3a, 0x9f, 0x4f, 0x22, 0x14, 0xaf, 0x54, 0x4d,
				0x8d, 0x3e, 0x2f, 0x33, 0xba, 0x48, 0x57, 0x77, 0x47, 0xc3, 0x34, 0xab, 0xae, 0xec, 0x19, 0x80,
				0x3d, 0xcc, 0xa1, 0x0e, 0xf4, 0xd1, 0x3a, 0x15, 0xbe, 0x57, 0xab, 0x8b, 0x69, 0xd1, 0xe8, 0x08,
			},
			Hash: util.Hash{
				0xb5, 0xd3, 0x03, 0x9a, 0x1c, 0x65, 0x4c, 0xf8, 0x67, 0xf2, 0xa3, 0xd3, 0xa0, 0x05, 0x15, 0x52,
				0xd5, 0xff, 0x48, 0x30, 0xcc, 0x1c, 0x83, 0xa3, 0xad, 0xe0, 0x86, 0xe7, 0x25, 0xdd, 0xca, 0xdb,
			},
		},
	},
	Hash: util.Hash{
		0xbf, 0x5a, 0xf0, 0xfe, 0x94, 0x15, 0xeb, 0x72, 0xae, 0x8d, 0xd2, 0x09, 0x17, 0xc4, 0x01, 0x71,
		0x51, 0x59, 0xeb, 0x4d, 0x0f, 0x85, 0x13, 0xda, 0x90, 0xb5, 0x91, 0xb0, 0xa9, 0x66, 0x8a, 0x1c,
	},
	Sig: []uint8{
		0xb5, 0x01, 0xde, 0xbf, 0x14, 0x38, 0x1e, 0x2f, 0x45, 0x90, 0x25, 0xad, 0xa1, 0xad, 0xd1, 0x87,
		0xdf, 0xa0, 0xa1, 0xb8, 0x5f, 0xfb, 0xcf, 0x86, 0x25, 0x28, 0x69, 0x51, 0xcd, 0xcb, 0x9b, 0x90,
		0xd1, 0xb7, 0x2d, 0xb3, 0x8b, 0x9f, 0xe7, 0x54, 0x1a, 0xd6, 0x94, 0x28, 0x2a, 0xd3, 0x16, 0x06,
		0x8e, 0x09, 0x2e, 0xa7, 0x43, 0xc9, 0xb5, 0xa4, 0x94, 0x81, 0x9c, 0xa5, 0xd5, 0x76, 0x8c, 0x06,
	},
}

var GenesisBlockSenderNotFound = &wire.Block{
	Header: &wire.Header{
		Number: 0x0000000000000001,
		Nonce: wire.BlockNonce{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
		},
		MixHash: util.Hash{
			0x6d, 0x69, 0x78, 0x20, 0x68, 0x61, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		Timestamp:     1533388191,
		CreatorPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
		ParentHash: util.Hash{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		StateRoot: util.Hash{
			0x42, 0x28, 0x55, 0x51, 0x02, 0xa3, 0xe0, 0x42, 0x90, 0x9a, 0xbd, 0x88, 0x58, 0xaf, 0xf3, 0x7d,
			0xb9, 0xeb, 0x13, 0xab, 0x40, 0xed, 0x9b, 0x67, 0xab, 0x30, 0x35, 0x34, 0x3c, 0x7c, 0x79, 0x50,
		},
		TransactionsRoot: util.Hash{
			0x94, 0xe4, 0x6d, 0x40, 0x83, 0xdf, 0x0a, 0x27, 0x66, 0x2a, 0xc0, 0x8f, 0x32, 0x9c, 0xc0, 0x46,
			0x3b, 0x8a, 0x65, 0x42, 0x89, 0xf2, 0xf3, 0xda, 0x12, 0xcd, 0x34, 0x0f, 0x5a, 0x88, 0x17, 0x26,
		},
		Difficulty: new(big.Int).SetInt64(0x1f4),
	},
	Transactions: []*wire.Transaction{
		&wire.Transaction{
			Type:         1,
			Nonce:        123,
			To:           "e6i7rxApBYUt7w94gGDKTz45A5J567JfkS",
			From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
			SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			Value:        "1",
			Timestamp:    1532730722,
			Fee:          "0.1",
			InvokeArgs:   (*wire.InvokeArgs)(nil),
			Sig: []uint8{
				0x88, 0x0f, 0x9d, 0xe7, 0x01, 0x42, 0x13, 0xca, 0x41, 0x9b, 0x01, 0x53, 0xf3, 0x5a, 0x68, 0x24,
				0x6e, 0xc5, 0x39, 0x64, 0x39, 0x1b, 0xa6, 0x55, 0x2f, 0xb8, 0x17, 0xc7, 0xd9, 0x03, 0x52, 0x1a,
				0x8d, 0xdb, 0xc6, 0xf0, 0xcc, 0x0c, 0xb9, 0x3b, 0x6c, 0x20, 0x31, 0x92, 0xe1, 0xc8, 0xc5, 0xb5,
				0xa8, 0xf8, 0x38, 0xc6, 0xf7, 0xb3, 0xeb, 0x04, 0x42, 0xf8, 0xbf, 0x0e, 0x81, 0xfe, 0x8e, 0x07,
			},
			Hash: util.Hash{
				0x00, 0x7e, 0x3c, 0x2b, 0xea, 0x97, 0x23, 0x45, 0x0d, 0xa8, 0x8c, 0x4f, 0xa1, 0xaa, 0xc5, 0x0c,
				0xb0, 0x27, 0x2f, 0xdc, 0xde, 0x41, 0x9f, 0x69, 0x44, 0x81, 0x98, 0x3f, 0x12, 0x14, 0x13, 0xf4,
			},
		},
	},
	Hash: util.Hash{
		0x51, 0x3f, 0x3d, 0xe2, 0xef, 0xe5, 0xc9, 0x11, 0x97, 0xd8, 0x96, 0x01, 0x67, 0x5f, 0x61, 0x6e,
		0xe3, 0xee, 0x47, 0x58, 0x75, 0x14, 0x7a, 0xc6, 0xd6, 0x6d, 0xad, 0x38, 0xe7, 0x29, 0xad, 0x82,
	},
	Sig: []uint8{
		0xf6, 0x6f, 0x27, 0xed, 0x5b, 0x30, 0xc6, 0x82, 0x8f, 0x12, 0xd1, 0x67, 0x6c, 0x58, 0x6d, 0xf5,
		0x2f, 0xb2, 0x00, 0x16, 0x84, 0x21, 0xf1, 0x3e, 0x24, 0xff, 0xa9, 0xf1, 0x03, 0x30, 0x52, 0x5c,
		0xd3, 0x02, 0x2c, 0x11, 0x82, 0x50, 0x05, 0x29, 0x11, 0x87, 0xa1, 0x41, 0xfd, 0x4b, 0xc9, 0x36,
		0x9c, 0xc2, 0xc6, 0x2a, 0x55, 0x76, 0x92, 0xcb, 0xf7, 0x3a, 0xaa, 0xaa, 0x79, 0x48, 0x64, 0x01,
	},
}

var TransactionSet1 = [][]*wire.Transaction{
	[]*wire.Transaction{
		&wire.Transaction{
			Type:         1,
			Nonce:        123,
			To:           "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
			From:         "unknown_address",
			SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			Value:        "1",
			Timestamp:    1532730722,
			Fee:          "0.1",
			InvokeArgs:   (*wire.InvokeArgs)(nil),
			Sig: []uint8{
				0x75, 0x41, 0xfe, 0x04, 0x0a, 0x9c, 0xad, 0xfa, 0x0f, 0xfe, 0x50, 0x19, 0x57, 0x34, 0x75, 0x90,
				0xe0, 0xba, 0x78, 0xd4, 0x36, 0x4c, 0xf6, 0xf7, 0x3a, 0x9f, 0x4f, 0x22, 0x14, 0xaf, 0x54, 0x4d,
				0x8d, 0x3e, 0x2f, 0x33, 0xba, 0x48, 0x57, 0x77, 0x47, 0xc3, 0x34, 0xab, 0xae, 0xec, 0x19, 0x80,
				0x3d, 0xcc, 0xa1, 0x0e, 0xf4, 0xd1, 0x3a, 0x15, 0xbe, 0x57, 0xab, 0x8b, 0x69, 0xd1, 0xe8, 0x08,
			},
			Hash: util.Hash{
				0xb5, 0xd3, 0x03, 0x9a, 0x1c, 0x65, 0x4c, 0xf8, 0x67, 0xf2, 0xa3, 0xd3, 0xa0, 0x05, 0x15, 0x52,
				0xd5, 0xff, 0x48, 0x30, 0xcc, 0x1c, 0x83, 0xa3, 0xad, 0xe0, 0x86, 0xe7, 0x25, 0xdd, 0xca, 0xdb,
			},
		},
	},
	[]*wire.Transaction{
		&wire.Transaction{
			Type:         1,
			Nonce:        123,
			To:           "e6i7rxApBYUt7w94gGDKTz45A5J567JfkS",
			From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
			SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			Value:        "1000000000",
			Timestamp:    1532730722,
			Fee:          "0.1",
			InvokeArgs:   (*wire.InvokeArgs)(nil),
			Sig: []uint8{
				0x88, 0x0f, 0x9d, 0xe7, 0x01, 0x42, 0x13, 0xca, 0x41, 0x9b, 0x01, 0x53, 0xf3, 0x5a, 0x68, 0x24,
				0x6e, 0xc5, 0x39, 0x64, 0x39, 0x1b, 0xa6, 0x55, 0x2f, 0xb8, 0x17, 0xc7, 0xd9, 0x03, 0x52, 0x1a,
				0x8d, 0xdb, 0xc6, 0xf0, 0xcc, 0x0c, 0xb9, 0x3b, 0x6c, 0x20, 0x31, 0x92, 0xe1, 0xc8, 0xc5, 0xb5,
				0xa8, 0xf8, 0x38, 0xc6, 0xf7, 0xb3, 0xeb, 0x04, 0x42, 0xf8, 0xbf, 0x0e, 0x81, 0xfe, 0x8e, 0x07,
			},
			Hash: util.Hash{
				0x00, 0x7e, 0x3c, 0x2b, 0xea, 0x97, 0x23, 0x45, 0x0d, 0xa8, 0x8c, 0x4f, 0xa1, 0xaa, 0xc5, 0x0c,
				0xb0, 0x27, 0x2f, 0xdc, 0xde, 0x41, 0x9f, 0x69, 0x44, 0x81, 0x98, 0x3f, 0x12, 0x14, 0x13, 0xf4,
			},
		},
	},
	[]*wire.Transaction{
		&wire.Transaction{
			Type:         1,
			Nonce:        123,
			To:           "e6i7rxApBYUt7w94gGDKTz45A5J567JfkS",
			From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
			SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			Value:        "100_333",
			Timestamp:    1532730722,
			Fee:          "0.1",
			InvokeArgs:   (*wire.InvokeArgs)(nil),
			Sig: []uint8{
				0x88, 0x0f, 0x9d, 0xe7, 0x01, 0x42, 0x13, 0xca, 0x41, 0x9b, 0x01, 0x53, 0xf3, 0x5a, 0x68, 0x24,
				0x6e, 0xc5, 0x39, 0x64, 0x39, 0x1b, 0xa6, 0x55, 0x2f, 0xb8, 0x17, 0xc7, 0xd9, 0x03, 0x52, 0x1a,
				0x8d, 0xdb, 0xc6, 0xf0, 0xcc, 0x0c, 0xb9, 0x3b, 0x6c, 0x20, 0x31, 0x92, 0xe1, 0xc8, 0xc5, 0xb5,
				0xa8, 0xf8, 0x38, 0xc6, 0xf7, 0xb3, 0xeb, 0x04, 0x42, 0xf8, 0xbf, 0x0e, 0x81, 0xfe, 0x8e, 0x07,
			},
			Hash: util.Hash{
				0x00, 0x7e, 0x3c, 0x2b, 0xea, 0x97, 0x23, 0x45, 0x0d, 0xa8, 0x8c, 0x4f, 0xa1, 0xaa, 0xc5, 0x0c,
				0xb0, 0x27, 0x2f, 0xdc, 0xde, 0x41, 0x9f, 0x69, 0x44, 0x81, 0x98, 0x3f, 0x12, 0x14, 0x13, 0xf4,
			},
		},
	},
	[]*wire.Transaction{
		&wire.Transaction{
			Type:         1,
			Nonce:        123,
			To:           "e6i7rxApBYUt7w94gGDKTz45A5J567JfkS",
			From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
			SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			Value:        "1",
			Timestamp:    1532730722,
			Fee:          "0.1",
			InvokeArgs:   (*wire.InvokeArgs)(nil),
			Sig: []uint8{
				0x88, 0x0f, 0x9d, 0xe7, 0x01, 0x42, 0x13, 0xca, 0x41, 0x9b, 0x01, 0x53, 0xf3, 0x5a, 0x68, 0x24,
				0x6e, 0xc5, 0x39, 0x64, 0x39, 0x1b, 0xa6, 0x55, 0x2f, 0xb8, 0x17, 0xc7, 0xd9, 0x03, 0x52, 0x1a,
				0x8d, 0xdb, 0xc6, 0xf0, 0xcc, 0x0c, 0xb9, 0x3b, 0x6c, 0x20, 0x31, 0x92, 0xe1, 0xc8, 0xc5, 0xb5,
				0xa8, 0xf8, 0x38, 0xc6, 0xf7, 0xb3, 0xeb, 0x04, 0x42, 0xf8, 0xbf, 0x0e, 0x81, 0xfe, 0x8e, 0x07,
			},
			Hash: util.Hash{
				0x00, 0x7e, 0x3c, 0x2b, 0xea, 0x97, 0x23, 0x45, 0x0d, 0xa8, 0x8c, 0x4f, 0xa1, 0xaa, 0xc5, 0x0c,
				0xb0, 0x27, 0x2f, 0xdc, 0xde, 0x41, 0x9f, 0x69, 0x44, 0x81, 0x98, 0x3f, 0x12, 0x14, 0x13, 0xf4,
			},
		},
	},
	[]*wire.Transaction{
		&wire.Transaction{
			Type:         1,
			Nonce:        123,
			To:           "eQ9TnvMUUsB8ztZchSe3o7f5XfifEmZvJR",
			From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
			SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			Value:        "1",
			Timestamp:    1532730722,
			Fee:          "0.1",
			InvokeArgs:   (*wire.InvokeArgs)(nil),
			Sig: []uint8{
				0x88, 0x0f, 0x9d, 0xe7, 0x01, 0x42, 0x13, 0xca, 0x41, 0x9b, 0x01, 0x53, 0xf3, 0x5a, 0x68, 0x24,
				0x6e, 0xc5, 0x39, 0x64, 0x39, 0x1b, 0xa6, 0x55, 0x2f, 0xb8, 0x17, 0xc7, 0xd9, 0x03, 0x52, 0x1a,
				0x8d, 0xdb, 0xc6, 0xf0, 0xcc, 0x0c, 0xb9, 0x3b, 0x6c, 0x20, 0x31, 0x92, 0xe1, 0xc8, 0xc5, 0xb5,
				0xa8, 0xf8, 0x38, 0xc6, 0xf7, 0xb3, 0xeb, 0x04, 0x42, 0xf8, 0xbf, 0x0e, 0x81, 0xfe, 0x8e, 0x07,
			},
			Hash: util.Hash{
				0x00, 0x7e, 0x3c, 0x2b, 0xea, 0x97, 0x23, 0x45, 0x0d, 0xa8, 0x8c, 0x4f, 0xa1, 0xaa, 0xc5, 0x0c,
				0xb0, 0x27, 0x2f, 0xdc, 0xde, 0x41, 0x9f, 0x69, 0x44, 0x81, 0x98, 0x3f, 0x12, 0x14, 0x13, 0xf4,
			},
		},
	},
	[]*wire.Transaction{
		&wire.Transaction{
			Type:         1,
			Nonce:        123,
			To:           "eQ9TnvMUUsB8ztZchSe3o7f5XfifEmZvJR",
			From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
			SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			Value:        "1",
			Timestamp:    1532730722,
			Fee:          "0.1",
			InvokeArgs:   (*wire.InvokeArgs)(nil),
			Sig: []uint8{
				0x88, 0x0f, 0x9d, 0xe7, 0x01, 0x42, 0x13, 0xca, 0x41, 0x9b, 0x01, 0x53, 0xf3, 0x5a, 0x68, 0x24,
				0x6e, 0xc5, 0x39, 0x64, 0x39, 0x1b, 0xa6, 0x55, 0x2f, 0xb8, 0x17, 0xc7, 0xd9, 0x03, 0x52, 0x1a,
				0x8d, 0xdb, 0xc6, 0xf0, 0xcc, 0x0c, 0xb9, 0x3b, 0x6c, 0x20, 0x31, 0x92, 0xe1, 0xc8, 0xc5, 0xb5,
				0xa8, 0xf8, 0x38, 0xc6, 0xf7, 0xb3, 0xeb, 0x04, 0x42, 0xf8, 0xbf, 0x0e, 0x81, 0xfe, 0x8e, 0x07,
			},
			Hash: util.Hash{
				0x00, 0x7e, 0x3c, 0x2b, 0xea, 0x97, 0x23, 0x45, 0x0d, 0xa8, 0x8c, 0x4f, 0xa1, 0xaa, 0xc5, 0x0c,
				0xb0, 0x27, 0x2f, 0xdc, 0xde, 0x41, 0x9f, 0x69, 0x44, 0x81, 0x98, 0x3f, 0x12, 0x14, 0x13, 0xf4,
			},
		},
		&wire.Transaction{
			Type:         1,
			Nonce:        123,
			To:           "eQ9TnvMUUsB8ztZchSe3o7f5XfifEmZvJR",
			From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
			SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			Value:        "1",
			Timestamp:    1532730723,
			Fee:          "0.1",
			InvokeArgs:   (*wire.InvokeArgs)(nil),
			Sig: []uint8{
				0x88, 0x0f, 0x9d, 0xe7, 0x01, 0x42, 0x13, 0xca, 0x41, 0x9b, 0x01, 0x53, 0xf3, 0x5a, 0x68, 0x24,
				0x6e, 0xc5, 0x39, 0x64, 0x39, 0x1b, 0xa6, 0x55, 0x2f, 0xb8, 0x17, 0xc7, 0xd9, 0x03, 0x52, 0x1a,
				0x8d, 0xdb, 0xc6, 0xf0, 0xcc, 0x0c, 0xb9, 0x3b, 0x6c, 0x20, 0x31, 0x92, 0xe1, 0xc8, 0xc5, 0xb5,
				0xa8, 0xf8, 0x38, 0xc6, 0xf7, 0xb3, 0xeb, 0x04, 0x42, 0xf8, 0xbf, 0x0e, 0x81, 0xfe, 0x8e, 0x07,
			},
			Hash: util.Hash{
				0x00, 0x7e, 0x3c, 0x2b, 0xea, 0x97, 0x23, 0x45, 0x0d, 0xa8, 0x8c, 0x4f, 0xa1, 0xaa, 0xc5, 0x0c,
				0xb0, 0x27, 0x2f, 0xdc, 0xde, 0x41, 0x9f, 0x69, 0x44, 0x81, 0x98, 0x3f, 0x12, 0x14, 0x13, 0xf4,
			},
		},
	},
}

var TransactionSet2 = [][]*wire.Transaction{
	[]*wire.Transaction{
		&wire.Transaction{
			Type:         2,
			Nonce:        123,
			To:           "eQ9TnvMUUsB8ztZchSe3o7f5XfifEmZvJR",
			From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
			SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			Value:        "10",
			Timestamp:    1532730722,
			Fee:          "0.1",
			InvokeArgs:   (*wire.InvokeArgs)(nil),
			Sig: []uint8{
				0x88, 0x0f, 0x9d, 0xe7, 0x01, 0x42, 0x13, 0xca, 0x41, 0x9b, 0x01, 0x53, 0xf3, 0x5a, 0x68, 0x24,
				0x6e, 0xc5, 0x39, 0x64, 0x39, 0x1b, 0xa6, 0x55, 0x2f, 0xb8, 0x17, 0xc7, 0xd9, 0x03, 0x52, 0x1a,
				0x8d, 0xdb, 0xc6, 0xf0, 0xcc, 0x0c, 0xb9, 0x3b, 0x6c, 0x20, 0x31, 0x92, 0xe1, 0xc8, 0xc5, 0xb5,
				0xa8, 0xf8, 0x38, 0xc6, 0xf7, 0xb3, 0xeb, 0x04, 0x42, 0xf8, 0xbf, 0x0e, 0x81, 0xfe, 0x8e, 0x07,
			},
			Hash: util.Hash{
				0x00, 0x7e, 0x3c, 0x2b, 0xea, 0x97, 0x23, 0x45, 0x0d, 0xa8, 0x8c, 0x4f, 0xa1, 0xaa, 0xc5, 0x0c,
				0xb0, 0x27, 0x2f, 0xdc, 0xde, 0x41, 0x9f, 0x69, 0x44, 0x81, 0x98, 0x3f, 0x12, 0x14, 0x13, 0xf4,
			},
		},
	},
}

var InvalidTxInBlockSet1 = []*wire.Block{
	&wire.Block{
		Header: &wire.Header{
			Number: 0x0000000000000002,
			Nonce: wire.BlockNonce{
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
			MixHash: util.Hash{
				0x6d, 0x69, 0x78, 0x20, 0x68, 0x61, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
			Timestamp:     1533383903,
			CreatorPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			ParentHash: util.Hash{
				0x49, 0x3e, 0x03, 0x6d, 0xa7, 0xe3, 0x14, 0x88, 0xc7, 0xa2, 0xf7, 0xb9, 0xa1, 0xae, 0x9a, 0xaf,
				0x0b, 0xe5, 0xb8, 0x3f, 0xc9, 0x68, 0x50, 0x25, 0xf6, 0x1f, 0xff, 0xb0, 0x2c, 0x0d, 0x82, 0x45,
			},
			StateRoot: util.Hash{
				0x9a, 0x79, 0xb3, 0x64, 0xa3, 0x3b, 0xeb, 0x1d, 0x5b, 0x5f, 0xcd, 0x2c, 0x86, 0xfa, 0x5a, 0x10,
				0xc3, 0x15, 0xaf, 0x83, 0x43, 0x9b, 0xe8, 0x2a, 0x39, 0x03, 0x7f, 0xd9, 0x6a, 0x1c, 0x18, 0x49,
			},
			TransactionsRoot: util.Hash{
				0x94, 0xe4, 0x6d, 0x40, 0x83, 0xdf, 0x0a, 0x27, 0x66, 0x2a, 0xc0, 0x8f, 0x32, 0x9c, 0xc0, 0x46,
				0x3b, 0x8a, 0x65, 0x42, 0x89, 0xf2, 0xf3, 0xda, 0x12, 0xcd, 0x34, 0x0f, 0x5a, 0x88, 0x17, 0x26,
			},
			Difficulty: new(big.Int).SetInt64(0x1f4),
		},
		Transactions: []*wire.Transaction{
			&wire.Transaction{
				Type:         1,
				Nonce:        123,
				To:           "e6i7rxApBYUt7w94gGDKTz45A5J567JfkS",
				From:         "unknown_sender",
				SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
				Value:        "1",
				Timestamp:    1532730722,
				Fee:          "0.1",
				InvokeArgs:   (*wire.InvokeArgs)(nil),
				Sig: []uint8{
					0x88, 0x0f, 0x9d, 0xe7, 0x01, 0x42, 0x13, 0xca, 0x41, 0x9b, 0x01, 0x53, 0xf3, 0x5a, 0x68, 0x24,
					0x6e, 0xc5, 0x39, 0x64, 0x39, 0x1b, 0xa6, 0x55, 0x2f, 0xb8, 0x17, 0xc7, 0xd9, 0x03, 0x52, 0x1a,
					0x8d, 0xdb, 0xc6, 0xf0, 0xcc, 0x0c, 0xb9, 0x3b, 0x6c, 0x20, 0x31, 0x92, 0xe1, 0xc8, 0xc5, 0xb5,
					0xa8, 0xf8, 0x38, 0xc6, 0xf7, 0xb3, 0xeb, 0x04, 0x42, 0xf8, 0xbf, 0x0e, 0x81, 0xfe, 0x8e, 0x07,
				},
				Hash: util.Hash{
					0x00, 0x7e, 0x3c, 0x2b, 0xea, 0x97, 0x23, 0x45, 0x0d, 0xa8, 0x8c, 0x4f, 0xa1, 0xaa, 0xc5, 0x0c,
					0xb0, 0x27, 0x2f, 0xdc, 0xde, 0x41, 0x9f, 0x69, 0x44, 0x81, 0x98, 0x3f, 0x12, 0x14, 0x13, 0xf4,
				},
			},
		},
		Hash: util.Hash{
			0xe3, 0xa3, 0x7b, 0xc9, 0x8b, 0x19, 0x0f, 0xd8, 0xd4, 0xbd, 0x21, 0xaf, 0xaf, 0xa0, 0x5d, 0xdf,
			0x93, 0x20, 0x65, 0xbf, 0x60, 0x55, 0x39, 0xe5, 0x8c, 0x92, 0x30, 0x0e, 0x16, 0x4e, 0xe7, 0x9b,
		},
		Sig: []uint8{
			0x35, 0xf7, 0x09, 0x4d, 0x02, 0x54, 0xf6, 0x1f, 0x61, 0xf4, 0x27, 0x1b, 0x77, 0x69, 0x95, 0x34,
			0x8c, 0x04, 0x9e, 0xda, 0xdf, 0xe7, 0x86, 0xc0, 0xf3, 0x8b, 0x3e, 0x43, 0x97, 0x8c, 0x37, 0xf6,
			0xbc, 0xaa, 0x39, 0x34, 0xa5, 0x0a, 0xc0, 0xe3, 0xc4, 0xa4, 0x19, 0x4d, 0x1b, 0x44, 0xa4, 0x62,
			0xad, 0xd1, 0x83, 0x3d, 0x75, 0x2e, 0x59, 0xa1, 0x6b, 0x72, 0xe2, 0x70, 0xb6, 0x83, 0x34, 0x02,
		},
	},
}

var BlockSet2 = []*wire.Block{
	&wire.Block{
		Header: &wire.Header{
			Number: 0x0000000000000002,
			Nonce: wire.BlockNonce{
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
			MixHash: util.Hash{
				0x6d, 0x69, 0x78, 0x20, 0x68, 0x61, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
			Timestamp:     1533396732,
			CreatorPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			ParentHash: util.Hash{
				0x49, 0x3e, 0x03, 0x6d, 0xa7, 0xe3, 0x14, 0x88, 0xc7, 0xa2, 0xf7, 0xb9, 0xa1, 0xae, 0x9a, 0xaf,
				0x0b, 0xe5, 0xb8, 0x3f, 0xc9, 0x68, 0x50, 0x25, 0xf6, 0x1f, 0xff, 0xb0, 0x2c, 0x0d, 0x82, 0x45,
			},
			StateRoot: util.Hash{
				0x9a, 0x79, 0xb3, 0x64, 0xa3, 0x3b, 0xeb, 0x1d, 0x5b, 0x5f, 0xcd, 0x2c, 0x86, 0xfa, 0x5a, 0x10,
				0xc3, 0x15, 0xaf, 0x83, 0x43, 0x9b, 0xe8, 0x2a, 0x39, 0x03, 0x7f, 0xd9, 0x6a, 0x1c, 0x18, 0x49,
			},
			TransactionsRoot: util.Hash{
				0x94, 0xe4, 0x6d, 0x40, 0x83, 0xdf, 0x0a, 0x27, 0x66, 0x2a, 0xc0, 0x8f, 0x32, 0x9c, 0xc0, 0x46,
				0x3b, 0x8a, 0x65, 0x42, 0x89, 0xf2, 0xf3, 0xda, 0x12, 0xcd, 0x34, 0x0f, 0x5a, 0x88, 0x17, 0x26,
			},
			Difficulty: new(big.Int).SetInt64(0x1f4),
		},
		Transactions: []*wire.Transaction{
			&wire.Transaction{
				Type:         1,
				Nonce:        123,
				To:           "e6i7rxApBYUt7w94gGDKTz45A5J567JfkS",
				From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
				SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
				Value:        "1",
				Timestamp:    1532730722,
				Fee:          "0.1",
				InvokeArgs:   (*wire.InvokeArgs)(nil),
				Sig: []uint8{
					0x88, 0x0f, 0x9d, 0xe7, 0x01, 0x42, 0x13, 0xca, 0x41, 0x9b, 0x01, 0x53, 0xf3, 0x5a, 0x68, 0x24,
					0x6e, 0xc5, 0x39, 0x64, 0x39, 0x1b, 0xa6, 0x55, 0x2f, 0xb8, 0x17, 0xc7, 0xd9, 0x03, 0x52, 0x1a,
					0x8d, 0xdb, 0xc6, 0xf0, 0xcc, 0x0c, 0xb9, 0x3b, 0x6c, 0x20, 0x31, 0x92, 0xe1, 0xc8, 0xc5, 0xb5,
					0xa8, 0xf8, 0x38, 0xc6, 0xf7, 0xb3, 0xeb, 0x04, 0x42, 0xf8, 0xbf, 0x0e, 0x81, 0xfe, 0x8e, 0x07,
				},
				Hash: util.Hash{
					0x00, 0x7e, 0x3c, 0x2b, 0xea, 0x97, 0x23, 0x45, 0x0d, 0xa8, 0x8c, 0x4f, 0xa1, 0xaa, 0xc5, 0x0c,
					0xb0, 0x27, 0x2f, 0xdc, 0xde, 0x41, 0x9f, 0x69, 0x44, 0x81, 0x98, 0x3f, 0x12, 0x14, 0x13, 0xf4,
				},
			},
		},
		Hash: util.Hash{
			0x36, 0x51, 0x76, 0x73, 0xab, 0xc0, 0x66, 0x60, 0x2d, 0x2f, 0x03, 0x70, 0xb6, 0xc2, 0x59, 0xcc,
			0x42, 0x08, 0x57, 0xb4, 0xeb, 0x3b, 0x42, 0xb0, 0x26, 0x2a, 0x28, 0x58, 0xe9, 0x3d, 0xb1, 0x10,
		},
		Sig: []uint8{
			0xd1, 0xec, 0x6b, 0xec, 0xb0, 0xa0, 0x79, 0xbf, 0xf2, 0x4b, 0x33, 0xc1, 0xc4, 0xf2, 0xd7, 0x6f,
			0xfa, 0x21, 0x94, 0xd6, 0xef, 0x2a, 0x22, 0x50, 0x18, 0xb5, 0x14, 0x05, 0x08, 0xc5, 0x07, 0xe0,
			0x5c, 0xc6, 0xe5, 0x9e, 0xff, 0x46, 0x7f, 0x30, 0x07, 0xe2, 0xfa, 0x57, 0x1d, 0x89, 0xe6, 0x33,
			0x8b, 0xad, 0xf6, 0xb7, 0x51, 0x4d, 0xb7, 0x9a, 0x45, 0x95, 0x14, 0x11, 0x6e, 0x7b, 0x15, 0x0f,
		},
	},
	&wire.Block{
		Header: &wire.Header{
			Number: 0x0000000000000003,
			Nonce: wire.BlockNonce{
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
			MixHash: util.Hash{
				0x6d, 0x69, 0x78, 0x20, 0x68, 0x61, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
			Timestamp:     1533396974,
			CreatorPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			ParentHash: util.Hash{
				0x36, 0x51, 0x76, 0x73, 0xab, 0xc0, 0x66, 0x60, 0x2d, 0x2f, 0x03, 0x70, 0xb6, 0xc2, 0x59, 0xcc,
				0x42, 0x08, 0x57, 0xb4, 0xeb, 0x3b, 0x42, 0xb0, 0x26, 0x2a, 0x28, 0x58, 0xe9, 0x3d, 0xb1, 0x10,
			},
			StateRoot: util.Hash{
				0xd0, 0x22, 0x77, 0xed, 0x03, 0x85, 0x8a, 0xfb, 0xae, 0xb5, 0x7e, 0x5c, 0xee, 0x04, 0xc4, 0xaa,
				0xa7, 0xeb, 0xe2, 0x6d, 0x65, 0x63, 0x25, 0x79, 0xaa, 0x58, 0x68, 0x1c, 0xd6, 0x68, 0xdb, 0x2c,
			},
			TransactionsRoot: util.Hash{
				0x94, 0xe4, 0x6d, 0x40, 0x83, 0xdf, 0x0a, 0x27, 0x66, 0x2a, 0xc0, 0x8f, 0x32, 0x9c, 0xc0, 0x46,
				0x3b, 0x8a, 0x65, 0x42, 0x89, 0xf2, 0xf3, 0xda, 0x12, 0xcd, 0x34, 0x0f, 0x5a, 0x88, 0x17, 0x26,
			},
			Difficulty: new(big.Int).SetInt64(0x1f4),
		},
		Transactions: []*wire.Transaction{
			&wire.Transaction{
				Type:         1,
				Nonce:        123,
				To:           "e6i7rxApBYUt7w94gGDKTz45A5J567JfkS",
				From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
				SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
				Value:        "1",
				Timestamp:    1532730722,
				Fee:          "0.1",
				InvokeArgs:   (*wire.InvokeArgs)(nil),
				Sig: []uint8{
					0x88, 0x0f, 0x9d, 0xe7, 0x01, 0x42, 0x13, 0xca, 0x41, 0x9b, 0x01, 0x53, 0xf3, 0x5a, 0x68, 0x24,
					0x6e, 0xc5, 0x39, 0x64, 0x39, 0x1b, 0xa6, 0x55, 0x2f, 0xb8, 0x17, 0xc7, 0xd9, 0x03, 0x52, 0x1a,
					0x8d, 0xdb, 0xc6, 0xf0, 0xcc, 0x0c, 0xb9, 0x3b, 0x6c, 0x20, 0x31, 0x92, 0xe1, 0xc8, 0xc5, 0xb5,
					0xa8, 0xf8, 0x38, 0xc6, 0xf7, 0xb3, 0xeb, 0x04, 0x42, 0xf8, 0xbf, 0x0e, 0x81, 0xfe, 0x8e, 0x07,
				},
				Hash: util.Hash{
					0x00, 0x7e, 0x3c, 0x2b, 0xea, 0x97, 0x23, 0x45, 0x0d, 0xa8, 0x8c, 0x4f, 0xa1, 0xaa, 0xc5, 0x0c,
					0xb0, 0x27, 0x2f, 0xdc, 0xde, 0x41, 0x9f, 0x69, 0x44, 0x81, 0x98, 0x3f, 0x12, 0x14, 0x13, 0xf4,
				},
			},
		},
		Hash: util.Hash{
			0x44, 0xeb, 0xc3, 0x63, 0x7e, 0x8a, 0xd4, 0xdb, 0xee, 0x9c, 0x5f, 0x22, 0xfd, 0x39, 0x9b, 0xef,
			0x89, 0x19, 0x73, 0x05, 0xf9, 0x70, 0x9d, 0x96, 0x0f, 0x08, 0x4d, 0xa9, 0x56, 0x97, 0x00, 0x19,
		},
		Sig: []uint8{
			0x5d, 0x3e, 0xfc, 0x4f, 0xbf, 0x5f, 0xb6, 0x63, 0x9b, 0x82, 0x57, 0xf8, 0x1a, 0x8c, 0xcf, 0x9e,
			0x89, 0x12, 0xbd, 0xcd, 0x0b, 0x2d, 0xec, 0xec, 0x73, 0x6c, 0x73, 0x5c, 0x04, 0xc3, 0x1b, 0x53,
			0xe9, 0x93, 0xf9, 0x99, 0x9c, 0x08, 0xa7, 0x10, 0xb1, 0xa0, 0xe2, 0x40, 0x3b, 0x5a, 0xb6, 0x36,
			0x2f, 0xac, 0x7d, 0xf9, 0x2a, 0x84, 0x22, 0x8f, 0xb5, 0x0f, 0x64, 0x5c, 0xb4, 0xc7, 0x17, 0x09,
		},
	},
	&wire.Block{
		Header: &wire.Header{
			Number: 0x0000000000000002,
			Nonce: wire.BlockNonce{
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
			MixHash: util.Hash{
				0x6d, 0x69, 0x78, 0x20, 0x68, 0x61, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
			Timestamp:     1533397630,
			CreatorPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			ParentHash: util.Hash{
				0x49, 0x3e, 0x03, 0x6d, 0xa7, 0xe3, 0x14, 0x88, 0xc7, 0xa2, 0xf7, 0xb9, 0xa1, 0xae, 0x9a, 0xaf,
				0x0b, 0xe5, 0xb8, 0x3f, 0xc9, 0x68, 0x50, 0x25, 0xf6, 0x1f, 0xff, 0xb0, 0x2c, 0x0d, 0x82, 0x45,
			},
			StateRoot: util.Hash{
				0x9a, 0x79, 0xb3, 0x64, 0xa3, 0x3b, 0xeb, 0x1d, 0x5b, 0x5f, 0xcd, 0x2c, 0x86, 0xfa, 0x5a, 0x10,
				0xc3, 0x15, 0xaf, 0x83, 0x43, 0x9b, 0xe8, 0x2a, 0x39, 0x03, 0x7f, 0xd9, 0x6a, 0x1c, 0x18, 0x49,
			},
			TransactionsRoot: util.Hash{
				0x94, 0xe4, 0x6d, 0x40, 0x83, 0xdf, 0x0a, 0x27, 0x66, 0x2a, 0xc0, 0x8f, 0x32, 0x9c, 0xc0, 0x46,
				0x3b, 0x8a, 0x65, 0x42, 0x89, 0xf2, 0xf3, 0xda, 0x12, 0xcd, 0x34, 0x0f, 0x5a, 0x88, 0x17, 0x26,
			},
			Difficulty: new(big.Int).SetInt64(0x1f4),
		},
		Transactions: []*wire.Transaction{
			&wire.Transaction{
				Type:         1,
				Nonce:        123,
				To:           "e6i7rxApBYUt7w94gGDKTz45A5J567JfkS",
				From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
				SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
				Value:        "1",
				Timestamp:    1532730722,
				Fee:          "0.1",
				InvokeArgs:   (*wire.InvokeArgs)(nil),
				Sig: []uint8{
					0x88, 0x0f, 0x9d, 0xe7, 0x01, 0x42, 0x13, 0xca, 0x41, 0x9b, 0x01, 0x53, 0xf3, 0x5a, 0x68, 0x24,
					0x6e, 0xc5, 0x39, 0x64, 0x39, 0x1b, 0xa6, 0x55, 0x2f, 0xb8, 0x17, 0xc7, 0xd9, 0x03, 0x52, 0x1a,
					0x8d, 0xdb, 0xc6, 0xf0, 0xcc, 0x0c, 0xb9, 0x3b, 0x6c, 0x20, 0x31, 0x92, 0xe1, 0xc8, 0xc5, 0xb5,
					0xa8, 0xf8, 0x38, 0xc6, 0xf7, 0xb3, 0xeb, 0x04, 0x42, 0xf8, 0xbf, 0x0e, 0x81, 0xfe, 0x8e, 0x07,
				},
				Hash: util.Hash{
					0x00, 0x7e, 0x3c, 0x2b, 0xea, 0x97, 0x23, 0x45, 0x0d, 0xa8, 0x8c, 0x4f, 0xa1, 0xaa, 0xc5, 0x0c,
					0xb0, 0x27, 0x2f, 0xdc, 0xde, 0x41, 0x9f, 0x69, 0x44, 0x81, 0x98, 0x3f, 0x12, 0x14, 0x13, 0xf4,
				},
			},
		},
		Hash: util.Hash{
			0x11, 0x4d, 0x1e, 0x28, 0xac, 0x15, 0xa0, 0x6d, 0xeb, 0xf7, 0x90, 0x48, 0x3c, 0xf3, 0xc4, 0xe8,
			0xfa, 0xe8, 0x90, 0x14, 0x29, 0x4a, 0x12, 0x07, 0xb5, 0x32, 0x7d, 0x25, 0x26, 0x05, 0xa4, 0xa2,
		},
		Sig: []uint8{
			0xb6, 0x09, 0xff, 0xd8, 0x51, 0x96, 0x5d, 0x72, 0xee, 0x76, 0xa9, 0x78, 0x60, 0xf1, 0x89, 0x28,
			0x65, 0x14, 0x67, 0xc6, 0x54, 0x12, 0x27, 0x13, 0xd9, 0x12, 0xc0, 0x7f, 0xc3, 0x06, 0x98, 0x99,
			0xc5, 0xe8, 0xcb, 0xd3, 0x95, 0xf7, 0x52, 0x55, 0xfa, 0x98, 0xf6, 0xb6, 0xbb, 0x07, 0x9f, 0x76,
			0xeb, 0x49, 0x05, 0xb9, 0xb3, 0x70, 0x67, 0x65, 0xff, 0xd7, 0xb3, 0x50, 0xdc, 0x76, 0x8a, 0x07,
		},
	},
	&wire.Block{
		Header: &wire.Header{
			Number: 0x0000000000000004,
			Nonce: wire.BlockNonce{
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
			MixHash: util.Hash{
				0x6d, 0x69, 0x78, 0x20, 0x68, 0x61, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
			Timestamp:     1533398226,
			CreatorPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			ParentHash: util.Hash{
				0x36, 0x51, 0x76, 0x73, 0xab, 0xc0, 0x66, 0x60, 0x2d, 0x2f, 0x03, 0x70, 0xb6, 0xc2, 0x59, 0xcc,
				0x42, 0x08, 0x57, 0xb4, 0xeb, 0x3b, 0x42, 0xb0, 0x26, 0x2a, 0x28, 0x58, 0xe9, 0x3d, 0xb1, 0x10,
			},
			StateRoot: util.Hash{
				0x75, 0x2e, 0x84, 0x80, 0xd3, 0x4b, 0x26, 0xa9, 0x0e, 0xc1, 0x8d, 0x50, 0xd2, 0x5d, 0x55, 0x49,
				0x92, 0x72, 0x93, 0xf0, 0x02, 0xab, 0xf2, 0xb0, 0x61, 0x5d, 0x9d, 0xb8, 0xd4, 0xb7, 0x72, 0xf2,
			},
			TransactionsRoot: util.Hash{
				0x94, 0xe4, 0x6d, 0x40, 0x83, 0xdf, 0x0a, 0x27, 0x66, 0x2a, 0xc0, 0x8f, 0x32, 0x9c, 0xc0, 0x46,
				0x3b, 0x8a, 0x65, 0x42, 0x89, 0xf2, 0xf3, 0xda, 0x12, 0xcd, 0x34, 0x0f, 0x5a, 0x88, 0x17, 0x26,
			},
			Difficulty: new(big.Int).SetInt64(0x1f4),
		},
		Transactions: []*wire.Transaction{
			&wire.Transaction{
				Type:         1,
				Nonce:        123,
				To:           "e6i7rxApBYUt7w94gGDKTz45A5J567JfkS",
				From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
				SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
				Value:        "1",
				Timestamp:    1532730722,
				Fee:          "0.1",
				InvokeArgs:   (*wire.InvokeArgs)(nil),
				Sig: []uint8{
					0x88, 0x0f, 0x9d, 0xe7, 0x01, 0x42, 0x13, 0xca, 0x41, 0x9b, 0x01, 0x53, 0xf3, 0x5a, 0x68, 0x24,
					0x6e, 0xc5, 0x39, 0x64, 0x39, 0x1b, 0xa6, 0x55, 0x2f, 0xb8, 0x17, 0xc7, 0xd9, 0x03, 0x52, 0x1a,
					0x8d, 0xdb, 0xc6, 0xf0, 0xcc, 0x0c, 0xb9, 0x3b, 0x6c, 0x20, 0x31, 0x92, 0xe1, 0xc8, 0xc5, 0xb5,
					0xa8, 0xf8, 0x38, 0xc6, 0xf7, 0xb3, 0xeb, 0x04, 0x42, 0xf8, 0xbf, 0x0e, 0x81, 0xfe, 0x8e, 0x07,
				},
				Hash: util.Hash{
					0x00, 0x7e, 0x3c, 0x2b, 0xea, 0x97, 0x23, 0x45, 0x0d, 0xa8, 0x8c, 0x4f, 0xa1, 0xaa, 0xc5, 0x0c,
					0xb0, 0x27, 0x2f, 0xdc, 0xde, 0x41, 0x9f, 0x69, 0x44, 0x81, 0x98, 0x3f, 0x12, 0x14, 0x13, 0xf4,
				},
			},
		},
		Hash: util.Hash{
			0xf9, 0x25, 0x32, 0x55, 0x78, 0x09, 0xf3, 0x77, 0xfb, 0xf1, 0x41, 0x95, 0x13, 0x05, 0xf5, 0x70,
			0xc7, 0xa4, 0xbf, 0xed, 0x6e, 0x9a, 0x90, 0x2a, 0x27, 0x47, 0x11, 0x99, 0x18, 0x52, 0x29, 0xb3,
		},
		Sig: []uint8{
			0x4d, 0x27, 0x2c, 0x24, 0xba, 0x3d, 0x95, 0xda, 0x0b, 0xdf, 0x41, 0xc4, 0xb1, 0xef, 0x88, 0xc8,
			0x1d, 0xec, 0xfd, 0x6b, 0x61, 0xd3, 0x08, 0x28, 0xf0, 0x13, 0xf3, 0x7a, 0x55, 0xa6, 0x72, 0xca,
			0x9a, 0x8f, 0x72, 0x54, 0x00, 0xad, 0x79, 0x08, 0x36, 0x5d, 0xca, 0xe2, 0x86, 0x25, 0xe6, 0x3f,
			0x75, 0xb5, 0x1f, 0x7a, 0x67, 0x45, 0xe7, 0x14, 0x9f, 0xb5, 0x17, 0x5d, 0x2e, 0x28, 0x0d, 0x04,
		},
	},
}

var StateRootSet1 = []*wire.Block{
	&wire.Block{
		Header: &wire.Header{
			Number: 0x0000000000000002,
			Nonce: wire.BlockNonce{
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
			MixHash: util.Hash{
				0x6d, 0x69, 0x78, 0x20, 0x68, 0x61, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
			Timestamp:     1533398347,
			CreatorPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			ParentHash: util.Hash{
				0x49, 0x3e, 0x03, 0x6d, 0xa7, 0xe3, 0x14, 0x88, 0xc7, 0xa2, 0xf7, 0xb9, 0xa1, 0xae, 0x9a, 0xaf,
				0x0b, 0xe5, 0xb8, 0x3f, 0xc9, 0x68, 0x50, 0x25, 0xf6, 0x1f, 0xff, 0xb0, 0x2c, 0x0d, 0x82, 0x45,
			},
			StateRoot: util.Hash{
				0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f,
				0x6f, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
			TransactionsRoot: util.Hash{
				0x94, 0xe4, 0x6d, 0x40, 0x83, 0xdf, 0x0a, 0x27, 0x66, 0x2a, 0xc0, 0x8f, 0x32, 0x9c, 0xc0, 0x46,
				0x3b, 0x8a, 0x65, 0x42, 0x89, 0xf2, 0xf3, 0xda, 0x12, 0xcd, 0x34, 0x0f, 0x5a, 0x88, 0x17, 0x26,
			},
			Difficulty: new(big.Int).SetInt64(0x1f4),
		},
		Transactions: []*wire.Transaction{
			&wire.Transaction{
				Type:         1,
				Nonce:        123,
				To:           "e6i7rxApBYUt7w94gGDKTz45A5J567JfkS",
				From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
				SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
				Value:        "1",
				Timestamp:    1532730722,
				Fee:          "0.1",
				InvokeArgs:   (*wire.InvokeArgs)(nil),
				Sig: []uint8{
					0x88, 0x0f, 0x9d, 0xe7, 0x01, 0x42, 0x13, 0xca, 0x41, 0x9b, 0x01, 0x53, 0xf3, 0x5a, 0x68, 0x24,
					0x6e, 0xc5, 0x39, 0x64, 0x39, 0x1b, 0xa6, 0x55, 0x2f, 0xb8, 0x17, 0xc7, 0xd9, 0x03, 0x52, 0x1a,
					0x8d, 0xdb, 0xc6, 0xf0, 0xcc, 0x0c, 0xb9, 0x3b, 0x6c, 0x20, 0x31, 0x92, 0xe1, 0xc8, 0xc5, 0xb5,
					0xa8, 0xf8, 0x38, 0xc6, 0xf7, 0xb3, 0xeb, 0x04, 0x42, 0xf8, 0xbf, 0x0e, 0x81, 0xfe, 0x8e, 0x07,
				},
				Hash: util.Hash{
					0x00, 0x7e, 0x3c, 0x2b, 0xea, 0x97, 0x23, 0x45, 0x0d, 0xa8, 0x8c, 0x4f, 0xa1, 0xaa, 0xc5, 0x0c,
					0xb0, 0x27, 0x2f, 0xdc, 0xde, 0x41, 0x9f, 0x69, 0x44, 0x81, 0x98, 0x3f, 0x12, 0x14, 0x13, 0xf4,
				},
			},
		},
		Hash: util.Hash{
			0xed, 0xd9, 0xe7, 0x39, 0x2d, 0x8b, 0x33, 0x39, 0x86, 0x99, 0x7a, 0xf6, 0x8a, 0x18, 0x12, 0xc1,
			0x50, 0x6f, 0xb3, 0x1b, 0xef, 0x25, 0xd3, 0xcf, 0x48, 0x5c, 0x9b, 0x04, 0xb8, 0xec, 0x66, 0x36,
		},
		Sig: []uint8{
			0x0d, 0xed, 0xcf, 0x05, 0xff, 0xf7, 0x91, 0x16, 0x43, 0x97, 0xc8, 0xec, 0xe2, 0xe0, 0x93, 0xd3,
			0xa8, 0xf7, 0x1d, 0xe8, 0x7c, 0x25, 0x0e, 0xca, 0xae, 0x84, 0x2c, 0xae, 0xf7, 0xe5, 0x1b, 0x2c,
			0x33, 0xbc, 0x14, 0x1a, 0x91, 0xe0, 0x1d, 0x9a, 0x2d, 0x3d, 0xa0, 0x5d, 0x26, 0x30, 0x22, 0x71,
			0x1e, 0xdb, 0xa0, 0xd6, 0xa7, 0x04, 0x0b, 0x94, 0xd9, 0x38, 0x9f, 0x67, 0xae, 0xd6, 0xb4, 0x08,
		},
	},
	&wire.Block{
		Header: &wire.Header{
			Number: 0x0000000000000002,
			Nonce: wire.BlockNonce{
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
			MixHash: util.Hash{
				0x6d, 0x69, 0x78, 0x20, 0x68, 0x61, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
			Timestamp:     1533398744,
			CreatorPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			ParentHash: util.Hash{
				0x49, 0x3e, 0x03, 0x6d, 0xa7, 0xe3, 0x14, 0x88, 0xc7, 0xa2, 0xf7, 0xb9, 0xa1, 0xae, 0x9a, 0xaf,
				0x0b, 0xe5, 0xb8, 0x3f, 0xc9, 0x68, 0x50, 0x25, 0xf6, 0x1f, 0xff, 0xb0, 0x2c, 0x0d, 0x82, 0x45,
			},
			StateRoot: util.Hash{
				0x9a, 0x79, 0xb3, 0x64, 0xa3, 0x3b, 0xeb, 0x1d, 0x5b, 0x5f, 0xcd, 0x2c, 0x86, 0xfa, 0x5a, 0x10,
				0xc3, 0x15, 0xaf, 0x83, 0x43, 0x9b, 0xe8, 0x2a, 0x39, 0x03, 0x7f, 0xd9, 0x6a, 0x1c, 0x18, 0x49,
			},
			TransactionsRoot: util.Hash{
				0x94, 0xe4, 0x6d, 0x40, 0x83, 0xdf, 0x0a, 0x27, 0x66, 0x2a, 0xc0, 0x8f, 0x32, 0x9c, 0xc0, 0x46,
				0x3b, 0x8a, 0x65, 0x42, 0x89, 0xf2, 0xf3, 0xda, 0x12, 0xcd, 0x34, 0x0f, 0x5a, 0x88, 0x17, 0x26,
			},
			Difficulty: new(big.Int).SetInt64(0x1f4),
		},
		Transactions: []*wire.Transaction{
			&wire.Transaction{
				Type:         1,
				Nonce:        123,
				To:           "e6i7rxApBYUt7w94gGDKTz45A5J567JfkS",
				From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
				SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
				Value:        "1",
				Timestamp:    1532730722,
				Fee:          "0.1",
				InvokeArgs:   (*wire.InvokeArgs)(nil),
				Sig: []uint8{
					0x88, 0x0f, 0x9d, 0xe7, 0x01, 0x42, 0x13, 0xca, 0x41, 0x9b, 0x01, 0x53, 0xf3, 0x5a, 0x68, 0x24,
					0x6e, 0xc5, 0x39, 0x64, 0x39, 0x1b, 0xa6, 0x55, 0x2f, 0xb8, 0x17, 0xc7, 0xd9, 0x03, 0x52, 0x1a,
					0x8d, 0xdb, 0xc6, 0xf0, 0xcc, 0x0c, 0xb9, 0x3b, 0x6c, 0x20, 0x31, 0x92, 0xe1, 0xc8, 0xc5, 0xb5,
					0xa8, 0xf8, 0x38, 0xc6, 0xf7, 0xb3, 0xeb, 0x04, 0x42, 0xf8, 0xbf, 0x0e, 0x81, 0xfe, 0x8e, 0x07,
				},
				Hash: util.Hash{
					0x00, 0x7e, 0x3c, 0x2b, 0xea, 0x97, 0x23, 0x45, 0x0d, 0xa8, 0x8c, 0x4f, 0xa1, 0xaa, 0xc5, 0x0c,
					0xb0, 0x27, 0x2f, 0xdc, 0xde, 0x41, 0x9f, 0x69, 0x44, 0x81, 0x98, 0x3f, 0x12, 0x14, 0x13, 0xf4,
				},
			},
		},
		Hash: util.Hash{
			0x0b, 0xa7, 0xfc, 0x5f, 0x27, 0x28, 0x82, 0x7f, 0x3e, 0xcd, 0x96, 0x7e, 0x39, 0x8b, 0xea, 0x42,
			0x89, 0xc5, 0xc8, 0x12, 0x2e, 0x8a, 0xe4, 0x00, 0xc7, 0x0c, 0x6a, 0x00, 0x6a, 0x1f, 0xcb, 0x21,
		},
		Sig: []uint8{
			0x4b, 0xf0, 0x96, 0x26, 0x94, 0xf8, 0xe9, 0xcf, 0x55, 0x02, 0xf0, 0x71, 0x15, 0xa5, 0xb5, 0x04,
			0xb3, 0x42, 0xf7, 0x29, 0x13, 0x0b, 0x23, 0x14, 0xa0, 0x3a, 0xb5, 0xa0, 0xb4, 0x40, 0xed, 0x73,
			0x76, 0xc8, 0xd0, 0x1d, 0x32, 0x7d, 0xc5, 0x14, 0x18, 0xa3, 0x12, 0xc2, 0xa3, 0xce, 0x48, 0x7f,
			0x39, 0xc4, 0xcf, 0x77, 0x5e, 0x88, 0xdb, 0x25, 0x42, 0x0c, 0x54, 0x6f, 0xa2, 0x41, 0xbd, 0x0c,
		},
	},
}

var OrphanSet1 = []*wire.Block{
	&wire.Block{
		Header: &wire.Header{
			Number: 0x0000000000000002,
			Nonce: wire.BlockNonce{
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
			MixHash: util.Hash{
				0x6d, 0x69, 0x78, 0x20, 0x68, 0x61, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
			Timestamp:     1533402111,
			CreatorPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			ParentHash: util.Hash{
				0x49, 0x3e, 0x03, 0x6d, 0xa7, 0xe3, 0x14, 0x88, 0xc7, 0xa2, 0xf7, 0xb9, 0xa1, 0xae, 0x9a, 0xaf,
				0x0b, 0xe5, 0xb8, 0x3f, 0xc9, 0x68, 0x50, 0x25, 0xf6, 0x1f, 0xff, 0xb0, 0x2c, 0x0d, 0x82, 0x45,
			},
			StateRoot: util.Hash{
				0x9a, 0x79, 0xb3, 0x64, 0xa3, 0x3b, 0xeb, 0x1d, 0x5b, 0x5f, 0xcd, 0x2c, 0x86, 0xfa, 0x5a, 0x10,
				0xc3, 0x15, 0xaf, 0x83, 0x43, 0x9b, 0xe8, 0x2a, 0x39, 0x03, 0x7f, 0xd9, 0x6a, 0x1c, 0x18, 0x49,
			},
			TransactionsRoot: util.Hash{
				0x18, 0x29, 0x19, 0x2d, 0xe6, 0x79, 0xbc, 0x99, 0x20, 0x87, 0x6c, 0xc7, 0xda, 0xc7, 0xd0, 0x35,
				0xba, 0x14, 0xd5, 0xb3, 0x94, 0x01, 0xd1, 0xc9, 0xe8, 0xb4, 0x6a, 0x73, 0x7e, 0x26, 0x8c, 0xac,
			},
			Difficulty: new(big.Int).SetInt64(0x1f4),
		},
		Transactions: []*wire.Transaction{
			&wire.Transaction{
				Type:         1,
				Nonce:        123,
				To:           "e6i7rxApBYUt7w94gGDKTz45A5J567JfkS",
				From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
				SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
				Value:        "1",
				Timestamp:    1532730725,
				Fee:          "0.1",
				InvokeArgs:   (*wire.InvokeArgs)(nil),
				Sig: []uint8{
					0x21, 0x6e, 0x84, 0xa1, 0x39, 0x6f, 0xdb, 0xc9, 0x8b, 0x36, 0x98, 0x0e, 0x56, 0xa7, 0x1a, 0xd1,
					0x97, 0xab, 0x29, 0xd2, 0x4f, 0x8b, 0x96, 0xdc, 0x9d, 0x25, 0x95, 0xc4, 0xa3, 0x3c, 0xb9, 0x6d,
					0xe5, 0x50, 0xdb, 0xa9, 0xc0, 0x0e, 0x4b, 0xe2, 0x68, 0x93, 0xcc, 0xbc, 0xc0, 0x38, 0xc8, 0xd5,
					0x8d, 0x7e, 0x6b, 0x2f, 0xa0, 0x71, 0x58, 0x68, 0x6a, 0x1a, 0x30, 0x67, 0xdc, 0x00, 0xce, 0x0d,
				},
				Hash: util.Hash{
					0x95, 0xf3, 0x39, 0xac, 0x58, 0xd2, 0x0e, 0xf9, 0x5f, 0x0a, 0x8a, 0x3c, 0x83, 0x86, 0xc0, 0x72,
					0x53, 0xda, 0x62, 0xc7, 0x96, 0xe5, 0x31, 0x13, 0x22, 0x17, 0x92, 0xef, 0x04, 0xbe, 0xb4, 0x7e,
				},
			},
		},
		Hash: util.Hash{
			0x7b, 0x4c, 0x6a, 0x09, 0xb6, 0xe6, 0xb2, 0x47, 0x0c, 0xcc, 0xc5, 0x90, 0xce, 0xfe, 0x2a, 0x4b,
			0xde, 0xde, 0x1c, 0xa8, 0xfb, 0xac, 0x81, 0x80, 0xfa, 0x78, 0xe2, 0xb1, 0x2c, 0x9d, 0xc7, 0xdc,
		},
		Sig: []uint8{
			0xa5, 0x2a, 0x37, 0xe2, 0xdd, 0x9b, 0xf5, 0xcd, 0x52, 0xfd, 0xaf, 0xca, 0x88, 0xc4, 0x91, 0x75,
			0xa0, 0xf1, 0xab, 0x09, 0x88, 0x94, 0x25, 0x24, 0xb0, 0x01, 0x4d, 0x10, 0x12, 0x67, 0x86, 0xba,
			0x18, 0x1c, 0x1e, 0x51, 0xe1, 0xb1, 0xe4, 0x95, 0xca, 0xea, 0x39, 0xbd, 0x9b, 0xf3, 0xa6, 0x4c,
			0xfb, 0xff, 0xf8, 0xab, 0xca, 0x5c, 0xc0, 0x9b, 0xe5, 0xf5, 0x82, 0xf2, 0xd1, 0x5f, 0x24, 0x0b,
		},
	},
	&wire.Block{
		Header: &wire.Header{
			Number: 0x0000000000000003,
			Nonce: wire.BlockNonce{
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
			MixHash: util.Hash{
				0x6d, 0x69, 0x78, 0x20, 0x68, 0x61, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
			Timestamp:     1533402200,
			CreatorPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			ParentHash: util.Hash{
				0x7b, 0x4c, 0x6a, 0x09, 0xb6, 0xe6, 0xb2, 0x47, 0x0c, 0xcc, 0xc5, 0x90, 0xce, 0xfe, 0x2a, 0x4b,
				0xde, 0xde, 0x1c, 0xa8, 0xfb, 0xac, 0x81, 0x80, 0xfa, 0x78, 0xe2, 0xb1, 0x2c, 0x9d, 0xc7, 0xdc,
			},
			StateRoot: util.Hash{
				0x32, 0xaa, 0x5e, 0xa5, 0xec, 0x8c, 0xd5, 0x9a, 0xde, 0x7b, 0xdd, 0xed, 0x2d, 0x6d, 0xd6, 0x22,
				0xdd, 0x25, 0x39, 0xd3, 0x87, 0x32, 0x49, 0xe0, 0x86, 0xb4, 0xb6, 0x07, 0x09, 0x1f, 0xf1, 0x06,
			},
			TransactionsRoot: util.Hash{
				0x33, 0x3d, 0x6c, 0x03, 0x12, 0x01, 0x37, 0x8e, 0x42, 0xeb, 0x39, 0x18, 0xea, 0xa8, 0x37, 0x1f,
				0x73, 0xee, 0xc0, 0xa5, 0xfb, 0x3f, 0xb2, 0x19, 0xd5, 0x85, 0x41, 0xf2, 0x13, 0xd7, 0x88, 0x54,
			},
			Difficulty: new(big.Int).SetInt64(0x1f4),
		},
		Transactions: []*wire.Transaction{
			&wire.Transaction{
				Type:         1,
				Nonce:        123,
				To:           "e6i7rxApBYUt7w94gGDKTz45A5J567JfkS",
				From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
				SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
				Value:        "1",
				Timestamp:    1532730726,
				Fee:          "0.1",
				InvokeArgs:   (*wire.InvokeArgs)(nil),
				Sig: []uint8{
					0x5c, 0x01, 0x3d, 0xa2, 0x9f, 0x27, 0x21, 0x46, 0xb2, 0x3c, 0x7c, 0xd8, 0x60, 0x6d, 0x07, 0xb8,
					0x3a, 0xd3, 0x42, 0x77, 0x9d, 0xe0, 0x96, 0xb7, 0x85, 0x95, 0x46, 0x34, 0xc5, 0x0b, 0xee, 0xdf,
					0xbd, 0xfb, 0xb2, 0x77, 0xa3, 0x74, 0x93, 0x86, 0x75, 0x63, 0xec, 0xa9, 0x03, 0xb9, 0x73, 0xce,
					0x60, 0x04, 0xe2, 0x87, 0x55, 0x65, 0x5a, 0x63, 0x44, 0xd6, 0x92, 0x2a, 0xa4, 0x10, 0x11, 0x04,
				},
				Hash: util.Hash{
					0xb1, 0x38, 0x25, 0x10, 0xc2, 0x5e, 0xb9, 0x42, 0x9f, 0x57, 0x59, 0x30, 0xfb, 0x03, 0xae, 0x29,
					0xc8, 0xa6, 0x5f, 0xb7, 0xcb, 0x94, 0x24, 0x21, 0xe7, 0x3b, 0x89, 0x7c, 0xe3, 0x00, 0xf5, 0x55,
				},
			},
		},
		Hash: util.Hash{
			0x27, 0x66, 0xb8, 0xf5, 0x24, 0x5b, 0x82, 0x49, 0x08, 0x9d, 0x47, 0xed, 0x38, 0x72, 0xa7, 0xc7,
			0x0f, 0xa9, 0xee, 0x12, 0xef, 0x47, 0xd0, 0xeb, 0x1b, 0x58, 0x7e, 0x4a, 0x78, 0x4a, 0x08, 0x85,
		},
		Sig: []uint8{
			0x6d, 0xbb, 0x37, 0x9c, 0x1b, 0xd1, 0xe3, 0x2f, 0x68, 0xd6, 0x2e, 0x59, 0xab, 0x6c, 0xdc, 0xa1,
			0x26, 0x55, 0x84, 0x83, 0x03, 0x2b, 0xbb, 0x4f, 0xaf, 0x42, 0x40, 0x54, 0x99, 0x35, 0x17, 0x5c,
			0x8f, 0xf2, 0xe0, 0x8e, 0x69, 0x0b, 0x26, 0x91, 0xa8, 0xcf, 0x2b, 0xf1, 0x63, 0xb9, 0x1d, 0x95,
			0xb0, 0x40, 0x67, 0xda, 0x19, 0x90, 0x1b, 0x0d, 0x40, 0xf7, 0xa0, 0x43, 0xa0, 0xf5, 0xcd, 0x09,
		},
	},
	&wire.Block{
		Header: &wire.Header{
			Number: 0x0000000000000004,
			Nonce: wire.BlockNonce{
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
			MixHash: util.Hash{
				0x6d, 0x69, 0x78, 0x20, 0x68, 0x61, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
			Timestamp:     1533402311,
			CreatorPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			ParentHash: util.Hash{
				0x27, 0x66, 0xb8, 0xf5, 0x24, 0x5b, 0x82, 0x49, 0x08, 0x9d, 0x47, 0xed, 0x38, 0x72, 0xa7, 0xc7,
				0x0f, 0xa9, 0xee, 0x12, 0xef, 0x47, 0xd0, 0xeb, 0x1b, 0x58, 0x7e, 0x4a, 0x78, 0x4a, 0x08, 0x85,
			},
			StateRoot: util.Hash{
				0x6b, 0xce, 0x72, 0xc1, 0xdb, 0x8e, 0x62, 0xab, 0xef, 0xac, 0xc2, 0x80, 0xe5, 0x65, 0x7c, 0x80,
				0x17, 0xd6, 0x4e, 0x64, 0xf5, 0xe7, 0x9e, 0x45, 0x7c, 0x22, 0x06, 0xd1, 0x0e, 0xdc, 0xf7, 0xc3,
			},
			TransactionsRoot: util.Hash{
				0x61, 0x60, 0x7c, 0x18, 0xb3, 0x4b, 0xea, 0x97, 0x50, 0x8d, 0xe4, 0xc8, 0x55, 0x83, 0xcf, 0x11,
				0x69, 0xe3, 0x8c, 0x04, 0x7b, 0xe5, 0x1f, 0x72, 0xfd, 0x10, 0xfb, 0xf0, 0xfb, 0x35, 0xc2, 0x7f,
			},
			Difficulty: new(big.Int).SetInt64(0x1f4),
		},
		Transactions: []*wire.Transaction{
			&wire.Transaction{
				Type:         1,
				Nonce:        123,
				To:           "e6i7rxApBYUt7w94gGDKTz45A5J567JfkS",
				From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
				SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
				Value:        "1",
				Timestamp:    1532730727,
				Fee:          "0.1",
				InvokeArgs:   (*wire.InvokeArgs)(nil),
				Sig: []uint8{
					0x9b, 0x9c, 0x1f, 0xd0, 0xda, 0x05, 0xcd, 0x20, 0xfb, 0x95, 0x0e, 0x31, 0x67, 0x31, 0x5e, 0x75,
					0x2f, 0xea, 0x95, 0xa9, 0xff, 0xa3, 0x41, 0x66, 0xa4, 0xc4, 0x83, 0x8e, 0x9e, 0x6d, 0x63, 0x74,
					0x1e, 0x0b, 0xbf, 0x84, 0x25, 0xb1, 0x96, 0xb9, 0x13, 0x69, 0x7a, 0x22, 0xd9, 0x0c, 0x6c, 0x5c,
					0x55, 0xe3, 0x99, 0x67, 0xe2, 0xb5, 0xa3, 0xab, 0x58, 0x2a, 0xf5, 0xea, 0xc6, 0xa6, 0x93, 0x07,
				},
				Hash: util.Hash{
					0x1f, 0xd9, 0x4b, 0xc2, 0x22, 0xa9, 0xb8, 0xb9, 0x24, 0xee, 0x8d, 0x16, 0xd9, 0x17, 0x18, 0xec,
					0xda, 0x46, 0xa9, 0xc6, 0xe1, 0x23, 0xa6, 0xc9, 0x65, 0x31, 0xd6, 0x99, 0x96, 0x26, 0x0c, 0xb6,
				},
			},
		},
		Hash: util.Hash{
			0xab, 0x9b, 0xf1, 0x60, 0xf8, 0x8a, 0x87, 0xc5, 0x94, 0x36, 0x10, 0x17, 0x8d, 0x4e, 0x6f, 0x4f,
			0x66, 0x2d, 0x4b, 0xab, 0xdc, 0xfc, 0x4d, 0x36, 0x96, 0xbf, 0xe3, 0x4d, 0x4e, 0xc5, 0x33, 0x0b,
		},
		Sig: []uint8{
			0xb0, 0x20, 0xdc, 0xcb, 0x1a, 0x39, 0xa5, 0x89, 0x2b, 0x20, 0x6d, 0x9f, 0x58, 0x3d, 0xd1, 0x84,
			0x83, 0xd7, 0x6d, 0x93, 0xa2, 0x68, 0x67, 0x24, 0xf0, 0xfd, 0xba, 0x5c, 0xd7, 0x06, 0x89, 0xd7,
			0x50, 0x54, 0xe1, 0x3e, 0x49, 0xe2, 0xe4, 0x8b, 0x00, 0xc1, 0x08, 0xf7, 0x56, 0x6b, 0x05, 0xce,
			0xa2, 0xcd, 0x99, 0x6f, 0x65, 0xd3, 0xdb, 0xb1, 0xf4, 0xb6, 0x3b, 0x65, 0xa4, 0x90, 0xd2, 0x0c,
		},
	},
	&wire.Block{
		Header: &wire.Header{
			Number: 0x0000000000000005,
			Nonce: wire.BlockNonce{
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
			MixHash: util.Hash{
				0x6d, 0x69, 0x78, 0x20, 0x68, 0x61, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
			Timestamp:     1533402388,
			CreatorPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			ParentHash: util.Hash{
				0xab, 0x9b, 0xf1, 0x60, 0xf8, 0x8a, 0x87, 0xc5, 0x94, 0x36, 0x10, 0x17, 0x8d, 0x4e, 0x6f, 0x4f,
				0x66, 0x2d, 0x4b, 0xab, 0xdc, 0xfc, 0x4d, 0x36, 0x96, 0xbf, 0xe3, 0x4d, 0x4e, 0xc5, 0x33, 0x0b,
			},
			StateRoot: util.Hash{
				0xf6, 0xa2, 0x26, 0x0d, 0xc7, 0x3b, 0xb4, 0xe0, 0xd7, 0xa8, 0x7f, 0x65, 0xe1, 0x15, 0xf9, 0x78,
				0x43, 0xc3, 0x3e, 0xc3, 0xf8, 0x3d, 0x0d, 0xf9, 0x70, 0xd2, 0x5e, 0xe4, 0x14, 0xd2, 0x6a, 0x26,
			},
			TransactionsRoot: util.Hash{
				0xda, 0x3b, 0xac, 0xa7, 0xc2, 0xc5, 0x37, 0xb9, 0x71, 0x55, 0xe0, 0xe4, 0x0c, 0x53, 0xe1, 0xe5,
				0x8b, 0x3f, 0xd6, 0xa8, 0x65, 0x5d, 0xd7, 0xed, 0xa4, 0x2e, 0xa0, 0x2d, 0xb5, 0x52, 0x36, 0xcf,
			},
			Difficulty: new(big.Int).SetInt64(0x1f4),
		},
		Transactions: []*wire.Transaction{
			&wire.Transaction{
				Type:         1,
				Nonce:        123,
				To:           "e6i7rxApBYUt7w94gGDKTz45A5J567JfkS",
				From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
				SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
				Value:        "1",
				Timestamp:    1532730728,
				Fee:          "0.1",
				InvokeArgs:   (*wire.InvokeArgs)(nil),
				Sig: []uint8{
					0xba, 0x36, 0x23, 0x95, 0x89, 0x1e, 0x00, 0xde, 0xe6, 0x03, 0xb3, 0x86, 0xa0, 0x0a, 0xf3, 0xdf,
					0x95, 0xb9, 0x57, 0x9e, 0x1e, 0xf2, 0xe7, 0x28, 0x01, 0x47, 0x05, 0x25, 0x69, 0xce, 0x11, 0x1b,
					0x93, 0x9b, 0xea, 0x87, 0xc4, 0x63, 0xdb, 0x63, 0xc7, 0x75, 0x60, 0xe4, 0xb2, 0xda, 0xf3, 0xa7,
					0xc7, 0x4c, 0x8c, 0xed, 0x00, 0x40, 0x31, 0x5f, 0xca, 0x64, 0x96, 0x2c, 0x06, 0x9e, 0xe9, 0x0d,
				},
				Hash: util.Hash{
					0xca, 0xa7, 0x10, 0xb4, 0x61, 0xb3, 0xfb, 0x48, 0x2a, 0x95, 0x35, 0x5a, 0x68, 0x06, 0x50, 0x37,
					0x0f, 0xb9, 0x09, 0xa6, 0x89, 0x46, 0x42, 0xb3, 0xdf, 0x57, 0x95, 0x1b, 0x0e, 0xe3, 0x42, 0xb1,
				},
			},
		},
		Hash: util.Hash{
			0x95, 0xbd, 0xbd, 0xbf, 0x1d, 0x18, 0x5b, 0xe0, 0x3d, 0x94, 0x60, 0xbc, 0x4f, 0x50, 0x1e, 0x51,
			0x32, 0x37, 0x70, 0xd8, 0x57, 0x2d, 0xeb, 0xc7, 0xe5, 0xb8, 0xf1, 0xb4, 0x28, 0xbd, 0x79, 0xcd,
		},
		Sig: []uint8{
			0x26, 0x4f, 0xcb, 0x62, 0xfc, 0x3b, 0xc0, 0xbd, 0x03, 0xf4, 0x4f, 0x9f, 0x72, 0xd0, 0xd0, 0x92,
			0x95, 0xed, 0x76, 0xcf, 0x7b, 0xa7, 0x30, 0x36, 0x58, 0x48, 0x4d, 0x98, 0xd4, 0x6e, 0x15, 0x75,
			0xc5, 0x6b, 0x68, 0x29, 0x9f, 0x26, 0x60, 0x0f, 0xe7, 0x40, 0xdb, 0x3a, 0x17, 0x4d, 0xd1, 0x0e,
			0xc3, 0x80, 0x0e, 0x97, 0x75, 0xb9, 0x1d, 0x71, 0x69, 0xbb, 0xa9, 0x86, 0x0f, 0x72, 0xc9, 0x08,
		},
	},
}
