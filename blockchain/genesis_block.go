package blockchain

import (
	"math/big"

	"github.com/ellcrys/elld/types/core"
	"github.com/ellcrys/elld/types/core/objects"
	"github.com/ellcrys/elld/util"
)

var GenesisBlock core.Block = &objects.Block{
	Header: &objects.Header{
		Number: 0x0000000000000001,
		Nonce: core.BlockNonce{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
		},
		Timestamp:     1535732323,
		CreatorPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
		ParentHash: util.Hash{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		StateRoot: util.Hash{
			0x7b, 0x4c, 0x6a, 0xd4, 0x51, 0x2b, 0x7b, 0xe2, 0xeb, 0xf1, 0x28, 0x28, 0xf2, 0xa7, 0xee, 0x5d,
			0x94, 0x94, 0x69, 0x5d, 0x54, 0xce, 0x33, 0xea, 0x81, 0x1c, 0x25, 0x15, 0x5d, 0x41, 0xbf, 0x60,
		},
		TransactionsRoot: util.Hash{
			0x51, 0xfb, 0x52, 0x42, 0xa7, 0x82, 0x7e, 0x1d, 0x97, 0x7a, 0x1a, 0xbf, 0x35, 0x4a, 0xa0, 0xb8,
			0x3d, 0x7a, 0xe9, 0x0d, 0xa3, 0x8b, 0x38, 0x9e, 0x1f, 0x73, 0x51, 0x8c, 0x9b, 0x69, 0x3f, 0x6d,
		},
		Difficulty:      new(big.Int).SetInt64(0x20000),
		TotalDifficulty: new(big.Int).SetInt64(0x20000),
		Extra:           []uint8{},
	},
	Transactions: []*objects.Transaction{
		&objects.Transaction{
			Type:         2,
			Nonce:        0x0000000000000001,
			To:           "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
			From:         "eGzzf1HtQL7M9Eh792iGHTvb6fsnnPipad",
			SenderPubKey: "48d9u6L7tWpSVYmTE4zBDChMUasjP5pvoXE7kPw5HbJnXRnZBNC",
			Value:        "1",
			Timestamp:    1532730722,
			Fee:          "0.1",
			InvokeArgs:   (*objects.InvokeArgs)(nil),
			Sig: []uint8{
				0xc2, 0x4b, 0xa8, 0x6d, 0xa1, 0x56, 0xf9, 0xd9, 0x2f, 0xe6, 0xbb, 0x04, 0x7e, 0xc0, 0x03, 0x3d,
				0xb4, 0x44, 0x33, 0x59, 0xef, 0xb2, 0x8f, 0x85, 0xb9, 0xaf, 0xef, 0x19, 0xa2, 0xcd, 0xb1, 0x8e,
				0x5d, 0xba, 0x80, 0xad, 0xc6, 0x47, 0xc9, 0xf1, 0x26, 0xc6, 0x1b, 0x77, 0x3a, 0xc9, 0xd1, 0xe9,
				0x8f, 0x55, 0x60, 0x0d, 0xd2, 0xb7, 0xbf, 0x20, 0x66, 0x5f, 0xba, 0x30, 0xc7, 0xf1, 0x57, 0x06,
			},
			Hash: util.Hash{
				0xe3, 0xae, 0xfc, 0x53, 0xaf, 0xe5, 0xf6, 0x0e, 0x53, 0x36, 0xff, 0x6d, 0xbf, 0xe8, 0xcf, 0xf1,
				0x2a, 0xe9, 0xc7, 0xbf, 0x9c, 0x5b, 0xb8, 0x8a, 0x5b, 0xb4, 0x6b, 0x44, 0x55, 0x87, 0xaa, 0xc0,
			},
		},
	},
	Hash: util.Hash{
		0x89, 0xa4, 0x36, 0xf3, 0xdd, 0x56, 0xf7, 0xcd, 0xf9, 0x5c, 0x4b, 0x06, 0xeb, 0x73, 0x13, 0xaf,
		0x57, 0x36, 0x75, 0x54, 0x6b, 0xae, 0x02, 0x3d, 0x89, 0xbc, 0xd1, 0x63, 0xe2, 0xe1, 0xb4, 0xd4,
	},
	Sig: []uint8{
		0x87, 0x03, 0x9c, 0xbf, 0x9a, 0xb7, 0xcf, 0x61, 0xc6, 0x90, 0xe3, 0xaf, 0xf7, 0xc4, 0xdd, 0x46,
		0xfb, 0x3a, 0xcd, 0xbb, 0x51, 0xcf, 0x38, 0xca, 0x46, 0x4f, 0x5e, 0x45, 0x21, 0x38, 0x57, 0xc8,
		0xa4, 0xc5, 0xfe, 0x11, 0x98, 0xae, 0x49, 0x13, 0x56, 0xc9, 0xbf, 0x99, 0x75, 0xa1, 0x20, 0xf7,
		0xc0, 0x7b, 0xd3, 0xac, 0x0a, 0xd9, 0xb1, 0x56, 0x08, 0x35, 0x08, 0x9d, 0x98, 0x45, 0x4e, 0x05,
	},
	ChainReader: nil,
	Broadcaster: nil,
}
