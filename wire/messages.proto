syntax = "proto3";

package wire;

// Handshake represents the first message between peers
message Handshake {
    string subVersion = 1;  // version of the client
}

// GetAddr is used to request for addresses from other peers
message GetAddr {
}

// GetAddrResponse is used to send addresses in response to a GetAddr
message Addr {
    repeated Address addresses = 1;  // list of addresses
}

message Address {
    string address = 1;
    int64 timestamp = 2;
}

// Ping represents a ping message
message Ping {
}

// Pong represents a pong message
message Pong {
}

// Reject is used to inform a node that its message was rejected
message Reject {
    string message = 1;
    int32 code = 2;
    string reason = 3;
    bytes extraData = 4;
}

// Transaction represents a transaction
message Transaction {
    int64 type = 1;
    int64 nonce = 2;
    string to = 3;
    string senderPubKey = 4;
    int64 Timestamp = 5;
    string Fee = 6;
    bytes sig = 7;
}